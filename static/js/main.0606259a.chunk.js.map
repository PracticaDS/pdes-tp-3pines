{"version":3,"sources":["serviceWorker.js","actions/seleccionarAccion.js","components/Accion/Accion.js","components/Accion/AccionContainer.js","components/Toolbox.js","models/Maquina.js","models/Accion.js","constantes.js","components/Detalle/DetalleContainer.js","components/Detalle/Detalle.js","components/Celda/Celda.js","actions/seleccionarCelda.js","components/Celda/CeldaContainer.js","components/Fabrica/Fabrica.js","components/Fabrica/FabricaContainer.js","components/App.js","reducers/acciones.js","models/Celda.js","reducers/fabrica.js","reducers/generadorDeCeldas.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","SELECCIONAR_ACCION","seleccionarAccion","accionSeleccionada","type","payload","Accion","_ref","accion","seleccionarImagen","imagen","react_default","a","createElement","onClick","src","alt","nombre","className","obtenerImagen","state","ownProps","acciones","imagenActivaUrl","imagenInactivaUrl","connect","dispatch","Toolbox","maquinas","agregarAcciones","map","index","AccionContainer","key","concat","agregarMaquinas","maquina","slice","Maquina","frecuencia","costo","direccion","arguments","length","undefined","ACCIONES","process","ejecutar","Object","objectSpread","MAQUINAS","obtenerMaquina","find","clases","seleccionada","Celda","seleccionar","toLowerCase","height","width","SELECCIONAR_CELDA","AGREGAR_MAQUINA","EJECUTAR_ACCION","seleccionarCelda","celdaSeleccionada","getState","includes","seSeleccionoUnaMaquina","celda","maquinaAAgregar","_ref2","seSeleccionoUnaAccion","accionAEjecutar","gridFromProps","props","gridTemplateColumns","ancho","gridTemplateRows","alto","celdas","fabrica","style","CeldaContainer","App","Toolbox_Toolbox","FabricaContainer","id","DetalleContainer","Component","accionNula","estadoInicial","reducer","estado","deseleccionar","esIgualA","unaCelda","otraCelda","x","y","asignarMaquina","ordenarPorCoordenadas","ejecutarAccion","contieneMaquina","Array","from","_","posicionX","sort","generarCeldas","nuevasCeldas","toConsumableArray","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Root","Provider","components_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0606259a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Action creator\nexport const SELECCIONAR_ACCION = 'SELECCIONAR_ACCION'\n\nconst seleccionarAccion = accionSeleccionada => {\n  return {\n    type: SELECCIONAR_ACCION,\n    payload: accionSeleccionada\n  }\n}\n\nexport default seleccionarAccion\n","import React from 'react';\nimport '../../styles/Toolbox.scss';\nimport '../../styles/_compartido.scss';\n\nconst Accion = ({accion, seleccionarImagen, imagen}) => {\n  return (\n    <div onClick={seleccionarImagen}>\n      <img src={imagen} alt={accion.nombre} className=\"accion\"/>\n    </div>\n  )\n}\n\nexport default Accion\n","import seleccionarAccion from '../../actions/seleccionarAccion';\nimport { connect } from 'react-redux';\nimport Accion from './Accion';\n\nfunction obtenerImagen(state, ownProps) {\n  return state.acciones.accionSeleccionada.nombre === ownProps.accion.nombre ?\n    ownProps.accion.imagenActivaUrl :\n    ownProps.accion.imagenInactivaUrl;\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  imagen: obtenerImagen(state, ownProps)\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  seleccionarImagen: () => dispatch(seleccionarAccion(ownProps.accion))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Accion)\n","import React from 'react';\nimport '../styles/Toolbox.scss';\nimport '../styles/_compartido.scss';\nimport AccionContainer from './Accion/AccionContainer';\n\nexport const Toolbox = ({maquinas, acciones}) => {\n  const agregarAcciones = () => {\n    return acciones.map((accion, index) =>\n      <AccionContainer key={`accion-${index}`} accion={accion}/>\n    )\n  }\n\n  const agregarMaquinas = () => {\n    return maquinas.map((maquina, index) =>\n      <AccionContainer key={`maquina-${index}`} accion={maquina}/>\n    )\n  }\n\n  return (\n    <div className=\"toolbox-contenedor\">\n\n      <div className=\"acciones-contenedor\">\n      \t<div className=\"titulo\">Máquinas</div>\n  \t    <div className=\"toolbox-acciones borde-piola\">\n\n          <div className=\"row\">\n            { agregarMaquinas().slice(0,2) }\n          </div>\n          <div className=\"row\">\n            { agregarMaquinas().slice(2,4) }\n          </div>\n          <div className=\"row\">\n            { agregarMaquinas().slice(4,6) }\n          </div>\n        </div>\n\t    </div>\n\n      <div className=\"acciones-contenedor\">\n        <div className=\"titulo\">Edición</div>\n  \t    <div className=\"toolbox-acciones borde-piola\">\n          <div className=\"row\">\n            { agregarAcciones().slice(0, 2) }\n          </div>\n          <div className=\"row\">\n            { agregarAcciones().slice(2, 4) }\n          </div>\n        </div>\n    \t</div>\n\n    </div>\n  )\n}\n","export const Maquina = (nombre,  imagenActivaUrl, imagenInactivaUrl, frecuencia, costo, direccion='Norte') => {\n  return {\n    nombre,\n    imagenActivaUrl,\n    imagenInactivaUrl,\n    frecuencia,\n    costo,\n    direccion,\n  }\n}\n","export const Accion = (nombre, imagenActivaUrl, imagenInactivaUrl, accion) =>  {\n  return {nombre, imagenActivaUrl, imagenInactivaUrl, accion}\n}","import { Maquina } from './models/Maquina'\nimport { Accion } from './models/Accion'\n\nlet rotarUrl =  process.env.PUBLIC_URL + '/icons/rotar.svg'\nlet rotarActivoUrl =  process.env.PUBLIC_URL + '/icons/rotar_activo.svg'\n\nlet eliminarUrl =  process.env.PUBLIC_URL + '/icons/eliminar.svg'\nlet eliminarActivoUrl =  process.env.PUBLIC_URL + '/icons/eliminar_activo.svg'\n\nlet moverUrl =  process.env.PUBLIC_URL + '/icons/mover.svg'\nlet moverActivoUrl =  process.env.PUBLIC_URL + '/icons/mover_activo.svg'\n\nconst accionRotar = {\n  ejecutar: function(maquina) {\n    if (maquina.direccion === 'Norte') return {...maquina, direccion: 'Este'}\n    if (maquina.direccion === 'Este') return {...maquina, direccion: 'Sur'}\n    if (maquina.direccion === 'Sur') return {...maquina, direccion: 'Oeste'}\n    if (maquina.direccion === 'Oeste') return {...maquina, direccion: 'Norte'}\n  }\n}\n\nexport const ACCIONES = [\n  Accion('Rotar', rotarActivoUrl, rotarUrl, accionRotar),\n  Accion('Eliminar', eliminarActivoUrl, eliminarUrl, {ejecutar: () => {}}),\n  Accion('Mover', moverActivoUrl, moverUrl, {ejecutar: () => {}}),\n]\n\nlet starterUrl =  process.env.PUBLIC_URL + '/icons/starter.svg'\nlet starterActivoUrl =  process.env.PUBLIC_URL + '/icons/starter_activo.svg'\n\nlet sellerUrl =  process.env.PUBLIC_URL + '/icons/seller.svg'\nlet sellerActivoUrl =  process.env.PUBLIC_URL + '/icons/seller_activo.svg'\n\nlet crafterUrl =  process.env.PUBLIC_URL + '/icons/crafter.svg'\nlet crafterActivoUrl =  process.env.PUBLIC_URL + '/icons/crafter_activo.svg'\n\nlet furnaceUrl =  process.env.PUBLIC_URL + '/icons/furnace.svg'\nlet furnaceActivoUrl =  process.env.PUBLIC_URL + '/icons/furnace_activo.svg'\n\nlet transporterUrl =  process.env.PUBLIC_URL + '/icons/transporter.svg'\nlet transporterActivoUrl =  process.env.PUBLIC_URL + '/icons/transporter_activo.svg'\n\nexport const MAQUINAS = [\n  Maquina('Starter', starterActivoUrl, starterUrl, '1', '10'),\n  Maquina('Seller', sellerActivoUrl, sellerUrl, '1', '15'),\n  Maquina('Crafter', crafterActivoUrl, crafterUrl, '1', '20'),\n  Maquina('Furnace', furnaceActivoUrl, furnaceUrl, '1', '25'),\n  Maquina('Transporter', transporterActivoUrl, transporterUrl, '1', '30', 'Norte'),\n]\n","import { connect } from 'react-redux';\nimport { Detalle } from './Detalle';\nimport { MAQUINAS } from '../../constantes';\n\nfunction obtenerMaquina(state) {\n  return MAQUINAS.find(maquina => maquina.nombre === state.acciones.accionSeleccionada.nombre);\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  maquina: obtenerMaquina(state)\n})\n\nexport default connect(mapStateToProps)(Detalle)\n","import React from 'react';\nimport '../../styles/Detalle.scss';\nimport '../../styles/_compartido.scss';\n\nexport const Detalle = ({maquina}) => {\n  return (\n    <div className=\"detalle-contenedor\">\n      <div>\n        <div className=\"titulo\">Detalles</div>\n            <div className=\"detalle-contenido borde-redondeado\">\n            {\n              maquina ?\n              <div>\n                <div className=\"nombre-maquina\">{maquina.nombre}</div>\n                <div className=\"costo-maquina\">Costo: <span> ${maquina.costo} </span></div>\n                <div className=\"frecuencia-maquina\">Frecuencia: <span> {maquina.frecuencia}/s </span></div>\n              </div> :\n              ''\n            }\n            </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport '../../styles/Celda.scss';\n\nconst clases = (seleccionada) => {\n  const claseSeleccionada = seleccionada ? 'seleccionada' : '';\n  return `celda ${claseSeleccionada}`\n};\n\nconst Celda = ({seleccionada, seleccionar, maquina}) => {\n  return (\n    <div className={ clases(seleccionada) } onClick={seleccionar}>\n      { !!maquina ? <img className={ maquina.direccion.toLowerCase() } src={maquina.imagenInactivaUrl} alt={maquina.nombre} height=\"100%\" width=\"100%\"/> : '' }\n    </div>\n  )\n};\n\nexport default Celda","import { MAQUINAS, ACCIONES } from '../constantes';\n\nexport const SELECCIONAR_CELDA = 'SELECCIONAR_CELDA';\nexport const AGREGAR_MAQUINA = 'AGREGAR_MAQUINA';\nexport const EJECUTAR_ACCION = 'EJECUTAR_ACCION';\n\nconst seSeleccionoUnaMaquina = (accionSeleccionada) => {\n  return MAQUINAS.map(({ nombre }) => nombre).includes(accionSeleccionada.nombre)\n}\n\nconst seSeleccionoUnaAccion = (accionSeleccionada) => {\n  return ACCIONES.map(({ nombre }) => nombre).includes(accionSeleccionada.nombre)\n}\n\nconst seleccionarCelda = celdaSeleccionada => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SELECCIONAR_CELDA,\n      payload: celdaSeleccionada\n    });\n\n    const accionSeleccionada = getState().acciones.accionSeleccionada;\n\n    if(seSeleccionoUnaMaquina(accionSeleccionada)) {\n      dispatch({\n        type: AGREGAR_MAQUINA,\n        payload: { celda: celdaSeleccionada, maquinaAAgregar: accionSeleccionada.nombre }\n      });\n    }\n    if(seSeleccionoUnaAccion(accionSeleccionada)) {\n      dispatch({\n        type: EJECUTAR_ACCION,\n        payload: { celda: celdaSeleccionada, accionAEjecutar: accionSeleccionada }\n      });\n    }\n  };\n};\n\nexport default seleccionarCelda\n","import { connect } from 'react-redux';\nimport Celda from \"./Celda\";\nimport seleccionarCelda from \"../../actions/seleccionarCelda\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  seleccionada: ownProps.celda.seleccionada,\n  maquina: ownProps.celda.maquina\n});\n\nconst mapActionsToProps = (dispatch, ownProps) => ({\n  seleccionar: () => dispatch(seleccionarCelda(ownProps.celda))\n});\n\nexport default connect(mapStateToProps, mapActionsToProps)(Celda)","import React from 'react';\nimport '../../styles/Fabrica.scss';\nimport CeldaContainer from \"../Celda/CeldaContainer\";\n\nconst anchoCelda = 55;\nconst altoCelda  = 55;\n\nconst gridFromProps = (props) => ({\n  gridTemplateColumns: `repeat(${props.ancho}, ${anchoCelda}px)`,\n  gridTemplateRows: `repeat(${props.alto}, ${altoCelda}px)`,\n  width: `${props.ancho * anchoCelda}px`,\n  height: `${props.alto * altoCelda}px`\n});\n\nexport const Fabrica = (props) => {\n  return (\n    <div className=\"fabrica-contenedor\" style={ gridFromProps(props) }>\n      { props.celdas.map((celda, index) => <CeldaContainer key={index} celda={celda}/>)}\n    </div>\n  )\n};\n","import { connect } from 'react-redux';\nimport { Fabrica } from \"./Fabrica\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  alto: 10,\n  ancho: 10,\n  celdas: state.fabrica.celdas\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fabrica)","import React, { Component } from 'react'\nimport '../styles/App.scss'\nimport { Toolbox } from './Toolbox.js'\nimport DetalleContainer from './Detalle/DetalleContainer'\nimport { MAQUINAS, ACCIONES } from '../constantes'\nimport FabricaContainer from './Fabrica/FabricaContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app-contenedor\">\n      \t<Toolbox maquinas={MAQUINAS} acciones={ACCIONES}/>\n        <FabricaContainer id=\"fabrica\"/>\n        <DetalleContainer id=\"detalle\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { SELECCIONAR_ACCION } from '../actions/seleccionarAccion';\n\nconst accionNula = {\n  nombre: ''\n}\n\nconst estadoInicial = {\n  accionSeleccionada: accionNula,\n}\n\nfunction reducer(estado = estadoInicial, { type, payload }) {\n  switch (type) {\n    case SELECCIONAR_ACCION: {\n      return estado.accionSeleccionada.nombre === payload.nombre ?\n        { ...estado, accionSeleccionada: accionNula } :\n        { ...estado, accionSeleccionada: payload }\n    }\n\n    default:\n      return estado\n  }\n}\n\nexport default reducer;\n","export const seleccionar = (celda) => {\n  return celda.seleccionada ? celda : {...celda, seleccionada: true } \n}\n\nexport const deseleccionar = (celda) => {\n  return !celda.seleccionada ? celda : {...celda, seleccionada: false }\n}\n\nexport const esIgualA = (unaCelda, otraCelda) => {\n  return unaCelda.x === otraCelda.x && unaCelda.y === otraCelda.y\n}\n\nexport const asignarMaquina = (celda, maquina) => {\n  return {...celda, maquina: maquina}\n}\n\nexport const ordenarPorCoordenadas = (unaCelda, otraCelda) => {\n  return unaCelda.x === otraCelda.x ? \n    unaCelda.y - otraCelda.y : \n    unaCelda.x - otraCelda.x\n}\n\nexport const ejecutarAccion = (celda, accionAEjecutar) => {\n  return {...celda, maquina: accionAEjecutar.accion.ejecutar(celda.maquina)}\n}\n\nexport const contieneMaquina = (celda) => {\n  return celda.maquina !== null \n}\n\nexport const Celda = (x, y, maquina = null) => {\n  return {\n    seleccionada: false,\n    maquina,\n    x,\n    y\n  }\n} \n","import { AGREGAR_MAQUINA, SELECCIONAR_CELDA, EJECUTAR_ACCION } from '../actions/seleccionarCelda';\nimport { MAQUINAS } from '../constantes';\nimport { seleccionar, deseleccionar, esIgualA, asignarMaquina, ejecutarAccion, contieneMaquina } from '../models/Celda'\nimport generarCeldas from './generadorDeCeldas'\n\nconst estadoInicial = {\n  celdas: generarCeldas(10, 10),\n};\n\nfunction reducer(estado = estadoInicial, { type, payload }) {\n  switch (type) {\n    case SELECCIONAR_CELDA: {\n      const nuevasCeldas = [...estado.celdas].map(celda => esIgualA(celda, payload) ? seleccionar(celda) : deseleccionar(celda))\n      return { ...estado, celdas: nuevasCeldas }\n    }\n    \n    case AGREGAR_MAQUINA: {\n      const maquinaAAgregar = MAQUINAS.find(({ nombre }) => nombre === payload.maquinaAAgregar)\n      const nuevasCeldas = [...estado.celdas].map( celda => esIgualA(celda, payload.celda) ? asignarMaquina(celda, maquinaAAgregar) : celda)\n      return { ...estado, celdas: nuevasCeldas }\n    }\n    \n    case EJECUTAR_ACCION: {\n      if (contieneMaquina(payload.celda)) {\n        const nuevasCeldas = [...estado.celdas].map( celda => esIgualA(celda, payload.celda) ? ejecutarAccion(celda, payload.accionAEjecutar) : celda)\n        return { ...estado, celdas: nuevasCeldas }\n      }\n      return estado\n    }\n\n    default:\n      return estado\n  }\n}\n\nexport default reducer\n","import { Celda, ordenarPorCoordenadas } from \"../models/Celda\";\n\nconst generarCeldas = (ancho, alto) => {\n  const celdas = Array.from(Array(ancho * alto)).map((_, index) => {\n    const posicionX = index % ancho;\n    const posicionY = (index - posicionX) / alto;\n\n    return Celda(posicionX, posicionY)\n  });\n\n  return celdas.sort(ordenarPorCoordenadas);\n}\n\nexport default generarCeldas","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport acciones from './reducers/acciones';\nimport fabrica from \"./reducers/fabrica\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst reducer = combineReducers({\n  fabrica,\n  acciones\n});\n\nconst store = createStore(\n  reducer, composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Provider from \"react-redux/es/components/Provider\";\nimport './index.css';\nimport App from './components/App.js';\nimport store from \"./store\";\n\nconst Root = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}