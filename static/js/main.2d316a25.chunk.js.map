{"version":3,"sources":["components/Fabrica.js","actions/seleccionarAccion.js","components/Accion/Accion.js","components/Accion/AccionContainer.js","components/Toolbox.js","models/Accion.js","models/Maquina.js","constantes.js","components/Detalle/DetalleContainer.js","components/Detalle/Detalle.js","components/App.js","serviceWorker.js","reducers/accciones.js","store.js","index.js"],"names":["Celda","props","react_default","a","createElement","id","className","Fabrica","Array","from","map","_","index","Fabrica_Celda","key","SELECCIONAR_ACCION","seleccionarAccion","accionSeleccionada","type","payload","Accion","_ref","seleccionarImagen","imagen","nombre","onClick","src","alt","obtenerImagen","state","ownProps","acciones","imagenActiva","imagenInactiva","connect","dispatch","Toolbox","maquinas","agregarAcciones","accion","AccionContainer","concat","imagenActivaUrl","imagenInactivaUrl","agregarMaquinas","maquina","slice","Object","classCallCheck","this","imagenUrl","activa","createClass","value","estaActiva","Maquina","_Accion","costo","frecuencia","_this","possibleConstructorReturn","getPrototypeOf","call","inherits","ACCIONES","MAQUINAS","obtenerMaquina","find","App","Toolbox_Toolbox","Fabrica_Fabrica","DetalleContainer","Component","Boolean","window","location","hostname","match","estadoInicial","reducer","estado","arguments","length","undefined","objectSpread","combineReducers","store","createStore","Root","Provider","components_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d316a25.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Fabrica.scss';\n\nexport const Celda = (props) => { \n  return (\n    <div id={\"celda-\"+props.id } className=\"celda\"/>\n  )\n} \n\nconst crearGrilla = () => {\n  return Array.from(Array(100)).map((_, index) => <Celda id={index} key={index}/>)\n} \n\nexport const Fabrica = (props) => { \n  return (\n    <div className=\"fabrica-contenedor\">\n    {\n      crearGrilla()\n    }\n    </div>\n  )\n}\n","// Action creator\nexport const SELECCIONAR_ACCION = 'SELECCIONAR_ACCION'\n\nconst seleccionarAccion = accionSeleccionada => {\n  return {\n    type: SELECCIONAR_ACCION,\n    payload: accionSeleccionada\n  }\n}\n\nexport default seleccionarAccion\n","import React from 'react';\nimport '../../styles/Toolbox.scss';\nimport '../../styles/_compartido.scss';\n\nconst Accion = ({seleccionarImagen, imagen, nombre}) => {\n  return (\n    <div onClick={seleccionarImagen}>\n      <img src={imagen} alt={nombre} className=\"accion\"/>\n    </div>\n  )\n}\n\nexport default Accion\n","import seleccionarAccion from '../../actions/seleccionarAccion';\nimport { connect } from 'react-redux';\nimport Accion from './Accion';\n\nfunction obtenerImagen(state, ownProps) {\n  return state.acciones.accionSeleccionada === ownProps.nombre ?\n    ownProps.imagenActiva :\n    ownProps.imagenInactiva;\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  imagen: obtenerImagen(state, ownProps)\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  seleccionarImagen: () => dispatch(seleccionarAccion(ownProps.nombre))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Accion)\n","import React from 'react';\nimport '../styles/Toolbox.scss';\nimport '../styles/_compartido.scss';\nimport AccionContainer from './Accion/AccionContainer';\n\nexport const Toolbox = ({maquinas, acciones}) => {\n  const agregarAcciones = () => {\n    return acciones.map((accion, index) =>\n      <AccionContainer key={`accion-${index}`} nombre={accion.nombre} imagenActiva={accion.imagenActivaUrl} imagenInactiva={accion.imagenInactivaUrl}/>\n    )\n  }\n\n  const agregarMaquinas = () => {\n    return maquinas.map((maquina, index) =>\n      <AccionContainer key={`maquina-${index}`} nombre={maquina.nombre} imagenActiva={maquina.imagenActivaUrl} imagenInactiva={maquina.imagenInactivaUrl}/>\n    )\n  }\n\n  return (\n    <div className=\"toolbox-contenedor\">\n\n      <div className=\"acciones-contenedor\">\n      \t<div className=\"titulo\">Máquinas</div>\n  \t    <div className=\"toolbox-acciones borde-piola\">\n\n          <div className=\"row\">\n            { agregarMaquinas().slice(0,2) }\n          </div>\n          <div className=\"row\">\n            { agregarMaquinas().slice(2,4) }\n          </div>\n          <div className=\"row\">\n            { agregarMaquinas().slice(4,6) }\n          </div>\n        </div>\n\t    </div>\n\n      <div className=\"acciones-contenedor\">\n        <div className=\"titulo\">Edición</div>\n  \t    <div className=\"toolbox-acciones borde-piola\">\n          <div className=\"row\">\n            { agregarAcciones().slice(0, 2) }\n          </div>\n          <div className=\"row\">\n            { agregarAcciones().slice(2, 4) }\n          </div>\n        </div>\n    \t</div>\n\n    </div>\n  )\n}\n","export class Accion {\n\n  constructor(nombre, imagenInactivaUrl, imagenActivaUrl) {\n    this.nombre = nombre\n    this.imagenUrl = imagenInactivaUrl\n\n    // privadas\n    this.imagenInactivaUrl = imagenInactivaUrl\n    this.imagenActivaUrl = imagenActivaUrl\n    this.activa = false\n  }\n\n  estaActiva() {\n    return this.activa;\n  }\n\n  activarDesactivar() {\n    this.activa = !this.activa\n    if (this.estaActiva()) {\n      this.imagenUrl = this.imagenActivaUrl\n    } else {\n      this.imagenUrl = this.imagenInactivaUrl\n    }\n  }\n}\n","import {Accion} from \"./Accion\";\n\nexport class Maquina extends Accion {\n\n  constructor(nombre, costo, frecuencia, imagenInactivaUrl, imagenActivaUrl) {\n    super(nombre, imagenInactivaUrl, imagenActivaUrl);\n    this.costo = costo\n    this.frecuencia = frecuencia\n  }\n}\n","import {Maquina} from \"./models/Maquina\";\nimport {Accion} from \"./models/Accion\";\n\nlet rotarUrl =  process.env.PUBLIC_URL + '/icons/rotar.svg'\nlet rotarActivoUrl =  process.env.PUBLIC_URL + '/icons/rotar_activo.svg'\n\nlet eliminarUrl =  process.env.PUBLIC_URL + '/icons/eliminar.svg'\nlet eliminarActivoUrl =  process.env.PUBLIC_URL + '/icons/eliminar_activo.svg'\n\nlet moverUrl =  process.env.PUBLIC_URL + '/icons/mover.svg'\nlet moverActivoUrl =  process.env.PUBLIC_URL + '/icons/mover_activo.svg'\n\nexport const ACCIONES = [\n  new Accion('Rotar', rotarUrl, rotarActivoUrl),\n  new Accion('Eliminar', eliminarUrl, eliminarActivoUrl),\n  new Accion('Mover', moverUrl, moverActivoUrl),\n]\n\nlet starterUrl =  process.env.PUBLIC_URL + '/icons/starter.svg'\nlet starterActivoUrl =  process.env.PUBLIC_URL + '/icons/starter_activo.svg'\n\nlet sellerUrl =  process.env.PUBLIC_URL + '/icons/seller.svg'\nlet sellerActivoUrl =  process.env.PUBLIC_URL + '/icons/seller_activo.svg'\n\nlet crafterUrl =  process.env.PUBLIC_URL + '/icons/crafter.svg'\nlet crafterActivoUrl =  process.env.PUBLIC_URL + '/icons/crafter_activo.svg'\n\nlet furnaceUrl =  process.env.PUBLIC_URL + '/icons/furnace.svg'\nlet furnaceActivoUrl =  process.env.PUBLIC_URL + '/icons/furnace_activo.svg'\n\nlet transporterUrl =  process.env.PUBLIC_URL + '/icons/transporter.svg'\nlet transporterActivoUrl =  process.env.PUBLIC_URL + '/icons/transporter_activo.svg'\n\nexport const MAQUINAS = [\n  new Maquina('Starter', '10', '1', starterUrl, starterActivoUrl),\n  new Maquina('Seller', '15', '1', sellerUrl, sellerActivoUrl),\n  new Maquina('Crafter', '20', '1', crafterUrl, crafterActivoUrl),\n  new Maquina('Furnace', '25', '1', furnaceUrl, furnaceActivoUrl),\n  new Maquina('Transporter', '30', '1', transporterUrl, transporterActivoUrl),\n]\n","import { connect } from 'react-redux';\nimport { Detalle } from './Detalle';\nimport { MAQUINAS } from '../../constantes';\n\nfunction obtenerMaquina(state) {\n  return MAQUINAS.find(maquina => maquina.nombre === state.acciones.accionSeleccionada);\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  maquina: obtenerMaquina(state)\n})\n\nexport default connect(mapStateToProps)(Detalle)\n","import React from 'react';\nimport '../../styles/Detalle.scss';\nimport '../../styles/_compartido.scss';\n\nexport const Detalle = ({maquina}) => {\n  return (\n    <div className=\"detalle-contenedor\">\n      <div>\n        <div className=\"titulo\">Detalles</div>\n            <div className=\"detalle-contenido borde-redondeado\">\n            {\n              maquina ?\n              <div>\n                <div className=\"nombre-maquina\">{maquina.nombre}</div>\n                <div className=\"costo-maquina\">Costo: <span> ${maquina.costo} </span></div>\n                <div className=\"frecuencia-maquina\">Frecuencia: <span> {maquina.frecuencia}/s </span></div>\n              </div> :\n              ''\n            }\n            </div>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport '../styles/App.scss';\nimport { Fabrica } from './Fabrica.js'\nimport { Toolbox } from './Toolbox.js'\nimport DetalleContainer from './Detalle/DetalleContainer';\nimport { ACCIONES, MAQUINAS } from \"../constantes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app-contenedor\">\n      \t<Toolbox maquinas={MAQUINAS} acciones={ACCIONES}/>\n        <Fabrica />\n        <DetalleContainer id=\"detalle\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SELECCIONAR_ACCION } from '../actions/seleccionarAccion';\n\nconst estadoInicial = {\n  accionSeleccionada: '',\n}\n\nfunction reducer(estado = estadoInicial, { type, payload }) {\n  switch (type) {\n    case SELECCIONAR_ACCION: {\n      return estado.accionSeleccionada === payload ?\n        { ...estado, accionSeleccionada: '' } :\n        { ...estado, accionSeleccionada: payload }\n    }\n\n    default:\n      return estado\n  }\n}\n\nexport default reducer;\n","import {combineReducers, createStore} from \"redux\";\nimport acciones from './reducers/accciones'\n\nconst initialState = {\n}\n\nconst reducer = combineReducers({\n  acciones,\n})\n\nconst store = createStore(reducer, initialState)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport Provider from \"react-redux/es/components/Provider\";\nimport store from \"./store\";\n\nconst Root = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}