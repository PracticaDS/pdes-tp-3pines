{"version":3,"sources":["serviceWorker.js","actions/seleccionarAccion.js","components/Accion/Accion.js","components/Accion/AccionContainer.js","components/Toolbox.js","models/Maquina.js","models/Accion.js","constantes.js","components/Detalle/DetalleContainer.js","components/Detalle/Detalle.js","components/Maquina.js","components/Celda/Celda.js","actions/seleccionarCelda.js","components/Celda/CeldaContainer.js","components/Fabrica/Fabrica.js","actions/tick.js","api/index.js","actions/mostrarMensajeDeError.js","actions/guardarJuego.js","components/Fabrica/FabricaContainer.js","components/Ganancia/Ganancia.js","components/Ganancia/GananciaContainer.js","components/App.js","reducers/acciones.js","models/Celda.js","reducers/celdas.js","actions/setUsuario.js","reducers/fabrica.js","reducers/generadorDeCeldas.js","store.js","components/Login/Login.js","actions/loggearUsuario.js","components/Login/LoginContainer.js","index.js"],"names":["Boolean","window","location","hostname","match","SELECCIONAR_ACCION","seleccionarAccion","accionSeleccionada","type","payload","Accion","_ref","accion","seleccionarImagen","imagen","react_default","a","createElement","onClick","src","alt","nombre","className","id","obtenerImagen","state","ownProps","acciones","imagenActivaUrl","imagenInactivaUrl","connect","dispatch","Toolbox","maquinas","agregarAcciones","map","index","AccionContainer","key","concat","agregarMaquinas","maquina","slice","Maquina","frecuencia","costo","direccion","arguments","length","undefined","tick","ACCIONES","process","ejecutar","Object","objectSpread","STARTER","SELLER","MAQUINAS","obtenerMaquina","find","toLowerCase","clases","seleccionada","Celda","celda","seleccionar","components_Maquina","materia","SELECCIONAR_CELDA","AGREGAR_MAQUINA","EJECUTAR_ACCION","SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER","MOVER_MAQUINA_DE_CELDA","seleccionarCelda","celdaSeleccionada","getState","includes","seSeleccionoUnaMaquina","maquinaAAgregar","_ref2","seSeleccionoUnaAccion","laCeldaSeleccionadaTieneMaquina","seHabiaSeleccionadoUnaMaquinaParaMover","fabrica","moverDesdeCelda","accionAEjecutar","gridFromProps","props","gridTemplateColumns","ancho","gridTemplateRows","alto","width","height","TICK","fetchData","method","data","headers","Content-Type","body","JSON","stringify","doFetch","asyncToGenerator","regenerator_default","mark","_callee","path","resp","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","console","log","stop","_x","_x2","_x3","apply","this","post","_callee2","_context2","_x4","_x5","handleError","_ref3","_callee3","mensaje","_context3","_x6","_x7","api","logearUsuario","_logearUsuario","_callee5","usuario","_context5","_callee4","_context4","_x8","guardarJuego","_guardarJuego","_callee7","_context7","_callee6","_context6","_x9","_x10","MOSTRAR_MENSAJE_DE_ERROR","mostrarMensajeDeError","error","push","doTick","setInterval","celdas","nombreUsuario","style","CeldaContainer","Ganancia","ganancia","App","GananciaContainer","Toolbox_Toolbox","FabricaContainer","DetalleContainer","accionNula","estadoInicial","reducer","estado","celdaEnCoordenada","coordenadaX","coordenadaY","x","y","celdaHaciaDondeApunta","unaCelda","esIgualA","otraCelda","ordenarPorCoordenadas","contieneMaquina","armarId","reducerDeCelda","deseleccionar","asignarMaquina","ejecutarAccion","SETEAR_USUARIO","setUsuario","Array","from","_","posicionX","sort","generarCeldas","mensajeDeError","nuevasCeldas","toConsumableArray","history","nuevaGanancia","celdasAfectadas","filter","reduce","celdaAfectada","materiaAnterior","keys","nuevoPayload","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","Login","login","setearUsuario","name","onChange","event","handleChange","target","value","Root","Provider","esm","react_router","component","LoginContainer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b15d9dd0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SELECCIONAR_ACCION = 'SELECCIONAR_ACCION'\n\nconst seleccionarAccion = accionSeleccionada => {\n  return {\n    type: SELECCIONAR_ACCION,\n    payload: accionSeleccionada\n  }\n}\n\nexport default seleccionarAccion\n","import React from 'react';\nimport '../../styles/Toolbox.scss';\nimport '../../styles/_compartido.scss';\n\nconst Accion = ({accion, seleccionarImagen, imagen}) => {\n  return (\n    <div onClick={seleccionarImagen}>\n      <img src={imagen} alt={accion.nombre} className=\"accion\" id={accion.nombre}/>\n    </div>\n  )\n}\n\nexport default Accion\n","import seleccionarAccion from '../../actions/seleccionarAccion';\nimport { connect } from 'react-redux';\nimport Accion from './Accion';\n\nconst obtenerImagen = (state, ownProps) => {\n  return state.acciones.accionSeleccionada.nombre === ownProps.accion.nombre ?\n    ownProps.accion.imagenActivaUrl :\n    ownProps.accion.imagenInactivaUrl;\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  imagen: obtenerImagen(state, ownProps)\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  seleccionarImagen: () => dispatch(seleccionarAccion(ownProps.accion))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Accion)\n","import React from 'react';\nimport '../styles/Toolbox.scss';\nimport '../styles/_compartido.scss';\nimport AccionContainer from './Accion/AccionContainer';\n\nexport const Toolbox = ({maquinas, acciones}) => {\n  const agregarAcciones = () => {\n    return acciones.map((accion, index) =>\n      <AccionContainer key={`accion-${index}`} accion={accion}/>\n    )\n  }\n\n  const agregarMaquinas = () => {\n    return maquinas.map((maquina, index) =>\n      <AccionContainer key={`maquina-${index}`} accion={maquina}/>\n    )\n  }\n\n  return (\n    <div className=\"toolbox-contenedor\">\n\n      <div className=\"acciones-contenedor\">\n      \t<div className=\"titulo\">Máquinas</div>\n  \t    <div className=\"toolbox-acciones borde-redondeado\">\n\n          <div className=\"row\">\n            { agregarMaquinas().slice(0, 2) }\n          </div>\n          <div className=\"row\">\n            { agregarMaquinas().slice(2, 4) }\n          </div>\n          <div className=\"row\">\n            { agregarMaquinas().slice(4, 6) }\n          </div>\n        </div>\n\t    </div>\n\n      <div className=\"acciones-contenedor\">\n        <div className=\"titulo\">Edición</div>\n  \t    <div className=\"toolbox-acciones borde-redondeado\">\n          <div className=\"row\">\n            { agregarAcciones().slice(0, 2) }\n          </div>\n          <div className=\"row\">\n            { agregarAcciones().slice(2, 4) }\n          </div>\n        </div>\n    \t</div>\n\n    </div>\n  )\n}\n","export const NORTE = 'Norte';\nexport const SUR = 'Sur';\nexport const ESTE = 'Este';\nexport const OESTE = 'Oeste';\n\nexport const Maquina = (nombre,  imagenActivaUrl, imagenInactivaUrl, frecuencia, costo, direccion = NORTE) => {\n  return {\n    nombre,\n    imagenActivaUrl,\n    imagenInactivaUrl,\n    frecuencia,\n    costo,\n    direccion,\n    tick() {\n      // Funcionalidad de Starter\n      return 1\n    }\n  }\n}\n","export const Accion = (nombre, imagenActivaUrl, imagenInactivaUrl, accion) =>  {\n  return {nombre, imagenActivaUrl, imagenInactivaUrl, accion}\n}","import {ESTE, Maquina, NORTE, OESTE, SUR} from './models/Maquina'\nimport { Accion } from './models/Accion'\n\nlet rotarUrl =  process.env.PUBLIC_URL + '/icons/rotar.svg'\nlet rotarActivoUrl =  process.env.PUBLIC_URL + '/icons/rotar_activo.svg'\n\nlet eliminarUrl =  process.env.PUBLIC_URL + '/icons/eliminar.svg'\nlet eliminarActivoUrl =  process.env.PUBLIC_URL + '/icons/eliminar_activo.svg'\n\nlet moverUrl =  process.env.PUBLIC_URL + '/icons/mover.svg'\nlet moverActivoUrl =  process.env.PUBLIC_URL + '/icons/mover_activo.svg'\n\nconst accionRotar = {\n  ejecutar: function(maquina) {\n    if (maquina.direccion === NORTE) return {...maquina, direccion: ESTE}\n    if (maquina.direccion === ESTE) return {...maquina, direccion: SUR}\n    if (maquina.direccion === SUR) return {...maquina, direccion: OESTE}\n    if (maquina.direccion === OESTE) return {...maquina, direccion: NORTE}\n  }\n}\n\nconst accionEliminar = {\n  ejecutar: function(maquina) {\n    return null\n  }\n}\n\nexport const ACCIONES = [\n  Accion('Rotar', rotarActivoUrl, rotarUrl, accionRotar),\n  Accion('Eliminar', eliminarActivoUrl, eliminarUrl, accionEliminar),\n  Accion('Mover', moverActivoUrl, moverUrl, {ejecutar: () => {}}),\n]\n\nlet starterUrl =  process.env.PUBLIC_URL + '/icons/starter.svg'\nlet starterActivoUrl =  process.env.PUBLIC_URL + '/icons/starter_activo.svg'\n\nlet sellerUrl =  process.env.PUBLIC_URL + '/icons/seller.svg'\nlet sellerActivoUrl =  process.env.PUBLIC_URL + '/icons/seller_activo.svg'\n\nlet crafterUrl =  process.env.PUBLIC_URL + '/icons/crafter.svg'\nlet crafterActivoUrl =  process.env.PUBLIC_URL + '/icons/crafter_activo.svg'\n\nlet furnaceUrl =  process.env.PUBLIC_URL + '/icons/furnace.svg'\nlet furnaceActivoUrl =  process.env.PUBLIC_URL + '/icons/furnace_activo.svg'\n\nlet transporterUrl =  process.env.PUBLIC_URL + '/icons/transporter.svg'\nlet transporterActivoUrl =  process.env.PUBLIC_URL + '/icons/transporter_activo.svg'\n\nexport const STARTER = 'Starter'\nexport const SELLER = 'Seller'\nexport const FURNACE = 'Furnace'\n\nexport const MAQUINAS = [\n  Maquina(STARTER, starterActivoUrl, starterUrl, '1', '10'),\n  Maquina(SELLER, sellerActivoUrl, sellerUrl, '1', '15'),\n  Maquina('Crafter', crafterActivoUrl, crafterUrl, '1', '20'),\n  Maquina(FURNACE, furnaceActivoUrl, furnaceUrl, '1', '25'),\n  Maquina('Transporter', transporterActivoUrl, transporterUrl, '1', '30', NORTE),\n]\n","import { connect } from 'react-redux';\nimport { Detalle } from './Detalle';\nimport { MAQUINAS } from '../../constantes';\n\nfunction obtenerMaquina(state) {\n  return MAQUINAS.find(maquina => maquina.nombre === state.acciones.accionSeleccionada.nombre);\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  maquina: obtenerMaquina(state)\n})\n\nexport default connect(mapStateToProps)(Detalle)\n","import React from 'react';\nimport '../../styles/Detalle.scss';\nimport '../../styles/_compartido.scss';\n\nexport const Detalle = ({maquina}) => {\n  return (\n    <div className=\"detalle-contenedor\">\n      <div>\n        <div className=\"titulo\">Detalles</div>\n        <div className=\"detalle-contenido borde-redondeado\">\n          {\n            maquina ?\n              <div>\n                <div className=\"nombre-maquina\">{maquina.nombre}</div>\n                <div className=\"costo-maquina\">Costo: <span> ${maquina.costo} </span></div>\n                <div className=\"frecuencia-maquina\">Frecuencia: <span> {maquina.frecuencia}/s </span></div>\n              </div> :\n              ''\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport '../styles/Maquina.scss';\n\nconst Maquina = ({maquina}) => {\n  return (\n    <div>\n      <img src={maquina.imagenInactivaUrl} alt={maquina.nombre} className={ `maquina ${maquina.direccion.toLowerCase()}` }/>\n    </div>\n  )\n};\n\nexport default Maquina","import React from 'react';\nimport '../../styles/Celda.scss';\nimport  Maquina from '../Maquina'\n\nconst clases = (seleccionada) => {\n  const claseSeleccionada = seleccionada ? 'seleccionada' : '';\n  return `celda ${claseSeleccionada}`\n};\n\nconst Celda = ({celda, seleccionada, seleccionar, maquina}) => {\n  return (\n    <div className={ clases(seleccionada) } onClick={seleccionar}>\n      { !!maquina ? <Maquina maquina={maquina}/> : '' }\n      { !!celda.materia ? <div className={'materia-prima'}>{ celda.materia }</div> : '' }\n    </div>\n  )\n};\n\nexport default Celda","import { MAQUINAS, ACCIONES } from '../constantes'\n\nexport const SELECCIONAR_CELDA = 'SELECCIONAR_CELDA'\nexport const AGREGAR_MAQUINA = 'AGREGAR_MAQUINA'\nexport const EJECUTAR_ACCION = 'EJECUTAR_ACCION'\nexport const SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER = 'SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER'\nexport const MOVER_MAQUINA_DE_CELDA = 'MOVER_MAQUINA_DE_CELDA'\n\nconst seSeleccionoUnaMaquina = (accionSeleccionada) => {\n  return MAQUINAS.map(({ nombre }) => nombre).includes(accionSeleccionada.nombre)\n}\n\nconst seSeleccionoUnaAccion = (accionSeleccionada) => {\n  return ACCIONES.map(({ nombre }) => nombre).includes(accionSeleccionada.nombre)\n}\n\nconst seleccionarCelda = celdaSeleccionada => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SELECCIONAR_CELDA,\n      payload: celdaSeleccionada\n    })\n\n    const accionSeleccionada = getState().acciones.accionSeleccionada\n\n    if(seSeleccionoUnaMaquina(accionSeleccionada)) {\n      dispatch({\n        type: AGREGAR_MAQUINA,\n        payload: { celda: celdaSeleccionada, maquinaAAgregar: accionSeleccionada.nombre }\n      })\n    }\n\n    if(seSeleccionoUnaAccion(accionSeleccionada)) {\n      if (accionSeleccionada.nombre === 'Mover') {\n        const laCeldaSeleccionadaTieneMaquina = celdaSeleccionada.maquina\n        const seHabiaSeleccionadoUnaMaquinaParaMover = getState().fabrica.moverDesdeCelda  \n        if (!laCeldaSeleccionadaTieneMaquina && !seHabiaSeleccionadoUnaMaquinaParaMover) {\n          return \n        }\n        if (!seHabiaSeleccionadoUnaMaquinaParaMover) {\n          dispatch({\n            type: SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER,\n            payload: { celda: celdaSeleccionada, accionAEjecutar: accionSeleccionada }\n          })\n        } else {\n          dispatch({\n            type: MOVER_MAQUINA_DE_CELDA,\n            payload: { celda: celdaSeleccionada, accionAEjecutar: accionSeleccionada }\n          })\n        }\n\n        return\n      }\n\n      dispatch({\n        type: EJECUTAR_ACCION,\n        payload: { celda: celdaSeleccionada, accionAEjecutar: accionSeleccionada }\n      })\n    }\n  }\n}\n\nexport default seleccionarCelda\n","import { connect } from 'react-redux';\nimport Celda from './Celda';\nimport seleccionarCelda from '../../actions/seleccionarCelda';\n\nconst mapStateToProps = (state, ownProps) => ({\n  celda: ownProps.celda,\n  seleccionada: ownProps.celda.seleccionada,\n  maquina: ownProps.celda.maquina\n});\n\nconst mapActionsToProps = (dispatch, ownProps) => ({\n  seleccionar: () => dispatch(seleccionarCelda(ownProps.celda))\n});\n\nexport default connect(mapStateToProps, mapActionsToProps)(Celda)","import React from 'react';\nimport '../../styles/Fabrica.scss';\nimport CeldaContainer from '../Celda/CeldaContainer';\n\nconst anchoCelda = 55;\nconst altoCelda  = 55;\n\nconst gridFromProps = (props) => ({\n  gridTemplateColumns: `repeat(${props.ancho}, ${anchoCelda}px)`,\n  gridTemplateRows: `repeat(${props.alto}, ${altoCelda}px)`,\n  width: `${props.ancho * anchoCelda}px`,\n  height: `${props.alto * altoCelda}px`\n});\n\nexport const Fabrica = (props) => {\n  return (\n    <div className='fabrica-contenedor'>\n      <div className='fabrica' style={ gridFromProps(props) }>\n        { props.celdas.map((celda, index) => <CeldaContainer key={index} celda={celda}/>)}\n      </div>\n      <div>\n        <button onClick={props.guardarJuego}>Guardar!</button>\n      </div>\n    </div>\n  )\n};\n","export const TICK = 'TICK'\n\nconst tick = () => {\n  return {\n    type: TICK\n  }\n}\n\nexport default tick\n","const initialPath = '/api'\n\nconst fetchData = (method, data) => { \n  const headers = {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  return data ? {...headers, body: JSON.stringify(data)} : headers\n}\n\nconst doFetch = async (method, path, data) => {\n  let resp\n  try {\n    resp = await fetch(`${initialPath}${path}`, fetchData(method, data))\n    return await resp.json()\n  } catch (e) {\n    // eslint-disable-next-line\n    console.log(`ERROR en ${method}.\\n   Path: ${path}\\nStacktrace: `, e)\n  }\n}\n\nconst post = async (path, data) => {\n  return doFetch('POST', path, data)\n}\n\n// TODO: para cuando lo necesitemos:\n// const get = async (path) => {\n//   return doFetch('GET', path)\n// }\n\nconst handleError = async (accion, mensaje) => { \n  try {\n    return await accion()\n  } catch (error) {\n    // eslint-disable-next-line   \n    console.log(mensaje, error)\n    throw error\n  }\n}\n\nconst api = {\n  logearUsuario: async (usuario) => {\n    return handleError(\n      async () => { return post('/login', {usuario}) }, \n      `Error al logear usaurio.\\nStackTrace: `\n    )\n  },\n\n  guardarJuego: async (usuario, fabrica) => {\n    return handleError(\n      async () => { return post('/fabrica', {usuario: usuario, fabrica: fabrica}) },\n      'Error al guardar el juego'\n    )\n  }\n}\n\nexport default api\n","export const MOSTRAR_MENSAJE_DE_ERROR = 'MOSTRAR_MENSAJE_DE_ERROR'\n\nconst mostrarMensajeDeError = error => {\n  return {\n    type: MOSTRAR_MENSAJE_DE_ERROR,\n    payload: error\n  }\n}\n\nexport default mostrarMensajeDeError\n","import api from '../api'\nimport mostrarMensajeDeError from './mostrarMensajeDeError'\nimport { push } from 'connected-react-router'\n\nexport const guardarJuego = () => {\n  return async (dispatch, getState) => {\n    try {\n      await api.guardarJuego(getState().fabrica.usuario, getState().fabrica)\n      dispatch(push('/fabrica'))\n    } catch (error) {\n      dispatch(mostrarMensajeDeError(error))\n    }\n  }\n}\n\nexport default guardarJuego","import { connect } from 'react-redux'\nimport { Fabrica } from './Fabrica'\nimport tick from '../../actions/tick'\nimport guardarJuego from '../../actions/guardarJuego'\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  alto: state.fabrica.alto,\n  ancho: state.fabrica.ancho,\n  celdas: state.fabrica.celdas,\n  nombreUsuario: state.fabrica.usuario.nombre\n})\n\nconst doTick = dispatch => {\n  setInterval(() => {\n    dispatch(tick())\n  }, 1000)\n}\n\nconst mapActionsToProps = (dispatch, ownProps) => ({  \n  tick: doTick(dispatch),\n  guardarJuego: () => dispatch(guardarJuego())\n})\n\nexport default connect(mapStateToProps, mapActionsToProps)(Fabrica)","import React from 'react';\nimport '../../styles/Ganancia.scss'\n\nconst Ganancia = ({ganancia, usuario}) => {\n  return (\n    <div className='ganancia-contenedor'>\n      Ganancias <span className='ganancia'>${ganancia}</span>\n      <code id=\"nombre-usuario\">{usuario}</code>\n    </div>\n  )\n}\n\nexport default Ganancia;\n","import { connect } from 'react-redux';\nimport Ganancia from './Ganancia';\n\nconst mapStateToProps = (state, ownProps) => ({\n  ganancia: state.fabrica.ganancia,\n  usuario: state.fabrica.usuario.nombre,\n});\n\nexport default connect(mapStateToProps, null)(Ganancia)","import React from 'react'\nimport '../styles/App.scss'\nimport { Toolbox } from './Toolbox.js'\nimport DetalleContainer from './Detalle/DetalleContainer'\nimport { MAQUINAS, ACCIONES } from '../constantes'\nimport FabricaContainer from './Fabrica/FabricaContainer'\nimport GananciaContainer from './Ganancia/GananciaContainer';\n\n\nconst App = (match) => {\n  return (\n    <div className=\"app-contenedor\">\n      <GananciaContainer id=\"ganancia\"/>\n      <Toolbox maquinas={MAQUINAS} acciones={ACCIONES}/>\n      <FabricaContainer id=\"fabrica\"/>\n      <DetalleContainer id=\"detalle\"/>\n    </div>\n  )\n}\n\nexport default App;\n","import { SELECCIONAR_ACCION } from '../actions/seleccionarAccion';\n\nconst accionNula = {\n  nombre: ''\n}\n\nconst estadoInicial = {\n  accionSeleccionada: accionNula,\n}\n\nfunction reducer(estado = estadoInicial, { type, payload }) {\n  switch (type) {\n    case SELECCIONAR_ACCION: {\n      return estado.accionSeleccionada.nombre === payload.nombre ?\n        { ...estado, accionSeleccionada: accionNula } :\n        { ...estado, accionSeleccionada: payload }\n    }\n\n    default:\n      return estado\n  }\n}\n\nexport default reducer;\n","import { NORTE, SUR, ESTE, OESTE } from './Maquina'\n\nconst celdaEnCoordenada = (celdas, coordenadaX, coordenadaY) => {\n  return celdas.find(celda => celda.x === coordenadaX && celda.y === coordenadaY)\n}\n\nexport const celdaHaciaDondeApunta = (celdas, unaCelda) => {\n  switch (unaCelda.maquina.direccion) {\n    case NORTE: { return celdaEnCoordenada(celdas, unaCelda.x + 1, unaCelda.y) }\n    case SUR:   { return celdaEnCoordenada(celdas, unaCelda.x - 1, unaCelda.y) }\n    case ESTE:  { return celdaEnCoordenada(celdas, unaCelda.x, unaCelda.y - 1) }\n    case OESTE: { return celdaEnCoordenada(celdas, unaCelda.x, unaCelda.y + 1) }\n    default: return null\n  }\n}\n\nexport const seleccionar = (celda) => {\n  return celda.seleccionada ? celda : { ...celda, seleccionada: true }\n}\n\nexport const deseleccionar = (celda) => {\n  return !celda.seleccionada ? celda : { ...celda, seleccionada: false }\n}\n\nexport const esIgualA = (unaCelda, otraCelda) => {\n  return unaCelda.x === otraCelda.x && unaCelda.y === otraCelda.y\n}\n\nexport const asignarMaquina = (celda, maquina) => {\n  return {...celda, maquina: maquina}\n}\n\nexport const ordenarPorCoordenadas = (unaCelda, otraCelda) => {\n  return unaCelda.x === otraCelda.x ? \n    unaCelda.y - otraCelda.y : \n    unaCelda.x - otraCelda.x\n}\n\nexport const ejecutarAccion = (celda, accionAEjecutar) => {\n  return {...celda, maquina: accionAEjecutar.accion.ejecutar(celda.maquina)}\n}\n\nexport const contieneMaquina = (celda) => {\n  return celda.maquina !== null \n}\n\nexport const armarId = (celda) => {\n  return `${celda.x}-${celda.y}`\n}\n\nexport const Celda = (x, y, maquina = null) => {\n  return {\n    seleccionada: false,\n    maquina,\n    materia: 0,\n    x,\n    y\n  }\n} \n","import {\n  seleccionar,\n  deseleccionar,\n  esIgualA,\n  asignarMaquina,\n  ejecutarAccion,\n} from '../models/Celda'\nimport { \n  AGREGAR_MAQUINA, \n  SELECCIONAR_CELDA, \n  EJECUTAR_ACCION, \n  MOVER_MAQUINA_DE_CELDA, \n} from '../actions/seleccionarCelda'\nimport { MAQUINAS } from '../constantes';\n\nexport const reducerDeCelda = (estado, { type, payload }) => {\n  switch (type) {\n    case SELECCIONAR_CELDA: {\n      return esIgualA(estado, payload) ? seleccionar(estado) : deseleccionar(estado)\n    }\n    case AGREGAR_MAQUINA: {\n      const maquina = MAQUINAS.find(({ nombre }) => nombre === payload.maquinaAAgregar)\n      return esIgualA(estado, payload.celda) ? asignarMaquina(estado,  maquina) : estado\n    }\n    case EJECUTAR_ACCION: {\n      return esIgualA(estado, payload.celda) ? ejecutarAccion(estado, payload.accionAEjecutar) : estado\n    }\n    case MOVER_MAQUINA_DE_CELDA: {\n      // Agregar a celda final\n      if (esIgualA(estado, payload.celda)) {\n        return {...estado, maquina: payload.moverDesdeCelda.maquina} \n      }\n      // Reemplazar contenido de celda inicial por celda final\n      if (esIgualA(estado, payload.moverDesdeCelda)) {\n        return {...estado, maquina: payload.celda.maquina}\n      }\n      return estado\n    }\n    default:\n      return estado\n  }\n}","export const SETEAR_USUARIO = 'SETEAR_USUARIO'\n\nconst setUsuario = usuario => {\n  return {\n    type: SETEAR_USUARIO,\n    payload: usuario\n  }\n}\n\nexport default setUsuario","import { contieneMaquina, armarId, celdaHaciaDondeApunta } from '../models/Celda';\nimport generarCeldas from './generadorDeCeldas';\nimport { STARTER, SELLER } from '../constantes';\nimport { TICK } from '../actions/tick';\nimport { reducerDeCelda } from './celdas';\nimport { MOVER_MAQUINA_DE_CELDA, SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER, EJECUTAR_ACCION, AGREGAR_MAQUINA, SELECCIONAR_CELDA } from '../actions/seleccionarCelda';\nimport { MOSTRAR_MENSAJE_DE_ERROR } from '../actions/mostrarMensajeDeError';\nimport { SETEAR_USUARIO } from '../actions/setUsuario';\n\nconst ancho = 10\nconst alto = 10\n\nconst estadoInicial = {\n  ancho,\n  alto,\n  celdas: generarCeldas(ancho, alto),\n  moverDesdeCelda: null,\n  ganancia: 0,\n  usuario: {},\n  mensajeDeError: ''\n}\n\nconst nuevasCeldas = (estado, accion) => {\n  return [...estado.celdas].map(celda => reducerDeCelda(celda, accion))\n}\n\nfunction reducer(estado = estadoInicial, { type, payload }) {\n  switch (type) {\n    case TICK: {\n      let nuevaGanancia = estado.ganancia\n      const celdasAfectadas = estado.celdas.filter(celda => celda.maquina).reduce((celdasAfectadas, celda) => {\n        const celdaAfectada = celdaHaciaDondeApunta(estado.celdas, celda)\n\n        if(celdaAfectada) {\n          if (celda.maquina.nombre === STARTER) {\n            const materiaAnterior = celdasAfectadas[armarId(celdaAfectada)] ? \n              celdasAfectadas[armarId(celdaAfectada)].materia : celdaAfectada.materia\n            celdasAfectadas[armarId(celdaAfectada)] = \n              {...celdaAfectada, materia: materiaAnterior + celda.maquina.tick(celdaAfectada)}\n          }\n        }\n\n        if (celda.maquina.nombre === SELLER) {\n          if (celda.materia > 0) {\n            celdasAfectadas[armarId(celda)] = \n              {...celda, materia: celda.materia - 1}\n            nuevaGanancia += 10 // Le sumo diez por sumarle algo, habria que tener en cuenta el precio de la materia\n          }\n        }\n\n        return celdasAfectadas\n      }, {})\n\n      if (Object.keys(celdasAfectadas).length === 0) {\n        return estado\n      }\n\n      const nuevasCeldas = estado.celdas.map(celda => {\n        return celdasAfectadas[armarId(celda)] ? celdasAfectadas[armarId(celda)] : celda\n      })\n\n      return nuevaGanancia !== estado.ganancia ? \n        { ...estado, celdas: nuevasCeldas, ganancia: nuevaGanancia } : \n        { ...estado, celdas: nuevasCeldas }\n    }\n\n    case SELECCIONAR_CELDA: {\n      return {...estado, celdas: nuevasCeldas(estado, { type, payload })}\n    }\n\n    case AGREGAR_MAQUINA: {\n      return {...estado, celdas: nuevasCeldas(estado, { type, payload })}\n    }\n\n    case EJECUTAR_ACCION: {\n      if (contieneMaquina(payload.celda)) {\n        return {...estado, celdas: nuevasCeldas(estado, { type, payload })}\n      }\n      return estado\n    }\n\n    case SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER: {\n      return {...estado, moverDesdeCelda: payload.celda}\n    }\n\n    case MOVER_MAQUINA_DE_CELDA: {\n      const nuevoPayload = {...payload, moverDesdeCelda: estado.moverDesdeCelda}\n      return {...estado, celdas: nuevasCeldas(estado, {type, payload: nuevoPayload}), moverDesdeCelda: null}\n    }\n\n    case SETEAR_USUARIO: {\n      return {...estado, usuario: { nombre: payload }}\n    }\n\n    case MOSTRAR_MENSAJE_DE_ERROR: {\n      return {...estado, mensajeDeError: payload.error}      \n    }\n\n    default:\n      return estado\n  }\n}\n\nexport default reducer\n","import { Celda, ordenarPorCoordenadas } from '../models/Celda';\n\nconst generarCeldas = (ancho, alto) => {\n  const celdas = Array.from(Array(ancho * alto)).map((_, index) => {\n    const posicionX = index % ancho;\n    const posicionY = (index - posicionX) / alto;\n\n    return Celda(posicionX, posicionY)\n  });\n\n  return celdas.sort(ordenarPorCoordenadas);\n}\n\nexport default generarCeldas","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport acciones from './reducers/acciones';\nimport fabrica from './reducers/fabrica';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n\nconst reducer = (history) => combineReducers({\n  router: connectRouter(history),\n  fabrica,\n  acciones\n});\n\nconst store = createStore(\n  reducer(history), \n  composeWithDevTools(\n    applyMiddleware(\n      routerMiddleware(history),\n      thunk\n    )\n  )\n);\n\nexport default store\n","import React from 'react';\nimport '../../styles/Login.scss'\n\nconst handleChange = (usuario, setearUsuario) => {\n  setearUsuario(usuario)\n}\n\nconst Login = ({login, setearUsuario}) => {\n  return (\n    <div className=\"app-contenedor\">\n      <div className=\"login-container\">\n        <h1>Bienvenide a la Revolución Industrial!</h1>\n        <div className=\"login-form\">\n          <input name='input' onChange={(event) => handleChange(event.target.value, setearUsuario)}/>\n          <button type='button' onClick={login}>✓</button>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Login","import api from '../api'\nimport mostrarMensajeDeError from './mostrarMensajeDeError'\nimport { push } from 'connected-react-router'\n\nexport const logearUsuario = () => {\n  return async (dispatch, getState) => {\n    try {\n      await api.logearUsuario(getState().fabrica.usuario)\n      dispatch(push('/fabrica'))\n    } catch (error) {\n      dispatch(mostrarMensajeDeError(error))\n    }\n  }\n}\n\nexport default logearUsuario\n","import { connect } from 'react-redux';\nimport Login from './Login';\nimport logearUsuario from '../../actions/loggearUsuario';\nimport setUsuario from '../../actions/setUsuario';\n\nconst mapStateToProps = (state, ownProps) => ({\n  usuario: ownProps.usuario,\n});\n\nconst method = (dispatch, usuario) => {\n  dispatch(setUsuario(usuario))\n} \n\nconst mapActionsToProps = (dispatch, ownProps) => ({\n  setearUsuario: (usuario) => method(dispatch, usuario),\n  login: () => dispatch(logearUsuario())\n});\n\nexport default connect(mapStateToProps, mapActionsToProps)(Login)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Provider from 'react-redux/es/components/Provider';\nimport './index.css';\nimport App from './components/App.js';\nimport store, { history } from './store';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route } from 'react-router-dom';\nimport LoginContainer from './components/Login/LoginContainer';\n\nconst Root = (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Route path=\"/login\" component={LoginContainer} />\n      <Route path=\"/fabrica\" component={App} />\n    </ConnectedRouter>\n  </Provider>\n);\n\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}