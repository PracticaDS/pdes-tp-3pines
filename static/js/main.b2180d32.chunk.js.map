{"version":3,"sources":["serviceWorker.js","actions/seleccionarAccion.js","components/Accion/Accion.js","components/Accion/AccionContainer.js","components/Toolbox.js","models/Maquina.js","models/Accion.js","constantes.js","components/Detalle/DetalleContainer.js","components/Detalle/Detalle.js","components/Maquina.js","components/Celda/Celda.js","actions/seleccionarCelda.js","components/Celda/CeldaContainer.js","components/Fabrica/Fabrica.js","actions/tick.js","components/Fabrica/FabricaContainer.js","components/App.js","reducers/acciones.js","models/Celda.js","reducers/fabrica.js","reducers/generadorDeCeldas.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","SELECCIONAR_ACCION","seleccionarAccion","accionSeleccionada","type","payload","Accion","_ref","accion","seleccionarImagen","imagen","react_default","a","createElement","onClick","src","alt","nombre","className","obtenerImagen","state","ownProps","acciones","imagenActivaUrl","imagenInactivaUrl","connect","dispatch","Toolbox","maquinas","agregarAcciones","map","index","AccionContainer","key","concat","agregarMaquinas","maquina","slice","Maquina","frecuencia","costo","direccion","arguments","length","undefined","tick","ACCIONES","process","ejecutar","Object","objectSpread","STARTER","MAQUINAS","obtenerMaquina","find","toLowerCase","clases","seleccionada","Celda","celda","seleccionar","components_Maquina","materia","SELECCIONAR_CELDA","AGREGAR_MAQUINA","EJECUTAR_ACCION","SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER","MOVER_MAQUINA_DE_CELDA","seleccionarCelda","celdaSeleccionada","getState","includes","seSeleccionoUnaMaquina","maquinaAAgregar","_ref2","seSeleccionoUnaAccion","laCeldaSeleccionadaTieneMaquina","seHabiaSeleccionadoUnaMaquinaParaMover","fabrica","moverDesdeCelda","accionAEjecutar","gridFromProps","props","gridTemplateColumns","ancho","gridTemplateRows","alto","width","height","TICK","doTick","setInterval","celdas","style","CeldaContainer","App","Toolbox_Toolbox","FabricaContainer","id","DetalleContainer","Component","accionNula","estadoInicial","reducer","estado","deseleccionar","esIgualA","unaCelda","otraCelda","x","y","asignarMaquina","ordenarPorCoordenadas","ejecutarAccion","contieneMaquina","armarId","Array","from","_","posicionX","sort","generarCeldas","celdaEnCoordenada","coordenadaX","coordenadaY","celdaHaciaDondeApunta","celdasAfectadas","filter","reduce","celdaAfectada","materiaAnterior","keys","nuevasCeldas","toConsumableArray","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Root","Provider","components_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2180d32.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Action creator\nexport const SELECCIONAR_ACCION = 'SELECCIONAR_ACCION'\n\nconst seleccionarAccion = accionSeleccionada => {\n  return {\n    type: SELECCIONAR_ACCION,\n    payload: accionSeleccionada\n  }\n}\n\nexport default seleccionarAccion\n","import React from 'react';\nimport '../../styles/Toolbox.scss';\nimport '../../styles/_compartido.scss';\n\nconst Accion = ({accion, seleccionarImagen, imagen}) => {\n  return (\n    <div onClick={seleccionarImagen}>\n      <img src={imagen} alt={accion.nombre} className=\"accion\"/>\n    </div>\n  )\n}\n\nexport default Accion\n","import seleccionarAccion from '../../actions/seleccionarAccion';\nimport { connect } from 'react-redux';\nimport Accion from './Accion';\n\nfunction obtenerImagen(state, ownProps) {\n  return state.acciones.accionSeleccionada.nombre === ownProps.accion.nombre ?\n    ownProps.accion.imagenActivaUrl :\n    ownProps.accion.imagenInactivaUrl;\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  imagen: obtenerImagen(state, ownProps)\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  seleccionarImagen: () => dispatch(seleccionarAccion(ownProps.accion))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Accion)\n","import React from 'react';\nimport '../styles/Toolbox.scss';\nimport '../styles/_compartido.scss';\nimport AccionContainer from './Accion/AccionContainer';\n\nexport const Toolbox = ({maquinas, acciones}) => {\n  const agregarAcciones = () => {\n    return acciones.map((accion, index) =>\n      <AccionContainer key={`accion-${index}`} accion={accion}/>\n    )\n  }\n\n  const agregarMaquinas = () => {\n    return maquinas.map((maquina, index) =>\n      <AccionContainer key={`maquina-${index}`} accion={maquina}/>\n    )\n  }\n\n  return (\n    <div className=\"toolbox-contenedor\">\n\n      <div className=\"acciones-contenedor\">\n      \t<div className=\"titulo\">Máquinas</div>\n  \t    <div className=\"toolbox-acciones borde-piola\">\n\n          <div className=\"row\">\n            { agregarMaquinas().slice(0,2) }\n          </div>\n          <div className=\"row\">\n            { agregarMaquinas().slice(2,4) }\n          </div>\n          <div className=\"row\">\n            { agregarMaquinas().slice(4,6) }\n          </div>\n        </div>\n\t    </div>\n\n      <div className=\"acciones-contenedor\">\n        <div className=\"titulo\">Edición</div>\n  \t    <div className=\"toolbox-acciones borde-piola\">\n          <div className=\"row\">\n            { agregarAcciones().slice(0, 2) }\n          </div>\n          <div className=\"row\">\n            { agregarAcciones().slice(2, 4) }\n          </div>\n        </div>\n    \t</div>\n\n    </div>\n  )\n}\n","export const NORTE = 'Norte';\nexport const SUR = 'Sur';\nexport const ESTE = 'Este';\nexport const OESTE = 'Oeste';\n\nexport const Maquina = (nombre,  imagenActivaUrl, imagenInactivaUrl, frecuencia, costo, direccion=NORTE) => {\n  return {\n    nombre,\n    imagenActivaUrl,\n    imagenInactivaUrl,\n    frecuencia,\n    costo,\n    direccion,\n    tick() {\n      // Funcionalidad de Starter\n      return 1\n    }\n  }\n}\n","export const Accion = (nombre, imagenActivaUrl, imagenInactivaUrl, accion) =>  {\n  return {nombre, imagenActivaUrl, imagenInactivaUrl, accion}\n}","import {ESTE, Maquina, NORTE, OESTE, SUR} from './models/Maquina'\nimport { Accion } from './models/Accion'\n\nlet rotarUrl =  process.env.PUBLIC_URL + '/icons/rotar.svg'\nlet rotarActivoUrl =  process.env.PUBLIC_URL + '/icons/rotar_activo.svg'\n\nlet eliminarUrl =  process.env.PUBLIC_URL + '/icons/eliminar.svg'\nlet eliminarActivoUrl =  process.env.PUBLIC_URL + '/icons/eliminar_activo.svg'\n\nlet moverUrl =  process.env.PUBLIC_URL + '/icons/mover.svg'\nlet moverActivoUrl =  process.env.PUBLIC_URL + '/icons/mover_activo.svg'\n\nconst accionRotar = {\n  ejecutar: function(maquina) {\n    if (maquina.direccion === NORTE) return {...maquina, direccion: ESTE}\n    if (maquina.direccion === ESTE) return {...maquina, direccion: SUR}\n    if (maquina.direccion === SUR) return {...maquina, direccion: OESTE}\n    if (maquina.direccion === OESTE) return {...maquina, direccion: NORTE}\n  }\n}\n\nconst accionEliminar = {\n  ejecutar: function(maquina) {\n    return null\n  }\n}\n\nexport const ACCIONES = [\n  Accion('Rotar', rotarActivoUrl, rotarUrl, accionRotar),\n  Accion('Eliminar', eliminarActivoUrl, eliminarUrl, accionEliminar),\n  Accion('Mover', moverActivoUrl, moverUrl, {ejecutar: () => {}}),\n]\n\nlet starterUrl =  process.env.PUBLIC_URL + '/icons/starter.svg'\nlet starterActivoUrl =  process.env.PUBLIC_URL + '/icons/starter_activo.svg'\n\nlet sellerUrl =  process.env.PUBLIC_URL + '/icons/seller.svg'\nlet sellerActivoUrl =  process.env.PUBLIC_URL + '/icons/seller_activo.svg'\n\nlet crafterUrl =  process.env.PUBLIC_URL + '/icons/crafter.svg'\nlet crafterActivoUrl =  process.env.PUBLIC_URL + '/icons/crafter_activo.svg'\n\nlet furnaceUrl =  process.env.PUBLIC_URL + '/icons/furnace.svg'\nlet furnaceActivoUrl =  process.env.PUBLIC_URL + '/icons/furnace_activo.svg'\n\nlet transporterUrl =  process.env.PUBLIC_URL + '/icons/transporter.svg'\nlet transporterActivoUrl =  process.env.PUBLIC_URL + '/icons/transporter_activo.svg'\n\nexport const STARTER = 'Starter'\n\nexport const MAQUINAS = [\n  Maquina(STARTER, starterActivoUrl, starterUrl, '1', '10'),\n  Maquina('Seller', sellerActivoUrl, sellerUrl, '1', '15'),\n  Maquina('Crafter', crafterActivoUrl, crafterUrl, '1', '20'),\n  Maquina('Furnace', furnaceActivoUrl, furnaceUrl, '1', '25'),\n  Maquina('Transporter', transporterActivoUrl, transporterUrl, '1', '30', NORTE),\n]\n","import { connect } from 'react-redux';\nimport { Detalle } from './Detalle';\nimport { MAQUINAS } from '../../constantes';\n\nfunction obtenerMaquina(state) {\n  return MAQUINAS.find(maquina => maquina.nombre === state.acciones.accionSeleccionada.nombre);\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  maquina: obtenerMaquina(state)\n})\n\nexport default connect(mapStateToProps)(Detalle)\n","import React from 'react';\nimport '../../styles/Detalle.scss';\nimport '../../styles/_compartido.scss';\n\nexport const Detalle = ({maquina}) => {\n  return (\n    <div className=\"detalle-contenedor\">\n      <div>\n        <div className=\"titulo\">Detalles</div>\n            <div className=\"detalle-contenido borde-redondeado\">\n            {\n              maquina ?\n              <div>\n                <div className=\"nombre-maquina\">{maquina.nombre}</div>\n                <div className=\"costo-maquina\">Costo: <span> ${maquina.costo} </span></div>\n                <div className=\"frecuencia-maquina\">Frecuencia: <span> {maquina.frecuencia}/s </span></div>\n              </div> :\n              ''\n            }\n            </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport '../styles/Maquina.scss';\n\nconst Maquina = ({maquina}) => {\n  return (\n    <div>\n      <img src={maquina.imagenInactivaUrl} \n           alt={maquina.nombre} \n           className={ `'maquina' ${maquina.direccion.toLowerCase()}` }/>\n    </div>\n  )\n};\n\nexport default Maquina","import React from 'react';\nimport '../../styles/Celda.scss';\nimport  Maquina from '../Maquina'\n\nconst clases = (seleccionada) => {\n  const claseSeleccionada = seleccionada ? 'seleccionada' : '';\n  return `celda ${claseSeleccionada}`\n};\n\nconst Celda = ({celda, seleccionada, seleccionar, maquina}) => {\n  return (\n    <div className={ clases(seleccionada) } onClick={seleccionar}>\n      { !!maquina ? <Maquina maquina={maquina}/> : '' }\n      { !!celda.materia ? <div className={'materia-prima'}>{ celda.materia }</div> : '' }\n    </div>\n  )\n};\n\nexport default Celda","import { MAQUINAS, ACCIONES } from '../constantes'\n\nexport const SELECCIONAR_CELDA = 'SELECCIONAR_CELDA'\nexport const AGREGAR_MAQUINA = 'AGREGAR_MAQUINA'\nexport const EJECUTAR_ACCION = 'EJECUTAR_ACCION'\nexport const SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER = 'SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER'\nexport const MOVER_MAQUINA_DE_CELDA = 'MOVER_MAQUINA_DE_CELDA'\n\nconst seSeleccionoUnaMaquina = (accionSeleccionada) => {\n  return MAQUINAS.map(({ nombre }) => nombre).includes(accionSeleccionada.nombre)\n}\n\nconst seSeleccionoUnaAccion = (accionSeleccionada) => {\n  return ACCIONES.map(({ nombre }) => nombre).includes(accionSeleccionada.nombre)\n}\n\nconst seleccionarCelda = celdaSeleccionada => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SELECCIONAR_CELDA,\n      payload: celdaSeleccionada\n    })\n\n    const accionSeleccionada = getState().acciones.accionSeleccionada\n\n    if(seSeleccionoUnaMaquina(accionSeleccionada)) {\n      dispatch({\n        type: AGREGAR_MAQUINA,\n        payload: { celda: celdaSeleccionada, maquinaAAgregar: accionSeleccionada.nombre }\n      })\n    }\n\n    if(seSeleccionoUnaAccion(accionSeleccionada)) {\n      \n      if (accionSeleccionada.nombre === 'Mover') {\n        const laCeldaSeleccionadaTieneMaquina = celdaSeleccionada.maquina\n        const seHabiaSeleccionadoUnaMaquinaParaMover = getState().fabrica.moverDesdeCelda  \n        if ( !laCeldaSeleccionadaTieneMaquina && !seHabiaSeleccionadoUnaMaquinaParaMover ) {\n          return \n        }\n        if ( !seHabiaSeleccionadoUnaMaquinaParaMover ) {\n          dispatch({\n            type: SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER,\n            payload: { celda: celdaSeleccionada, accionAEjecutar: accionSeleccionada }\n          })\n        } \n        else {\n          dispatch({\n            type: MOVER_MAQUINA_DE_CELDA,\n            payload: { celda: celdaSeleccionada, accionAEjecutar: accionSeleccionada }\n          })\n        }\n\n        return\n      }\n\n      dispatch({\n        type: EJECUTAR_ACCION,\n        payload: { celda: celdaSeleccionada, accionAEjecutar: accionSeleccionada }\n      })\n    }\n  }\n}\n\nexport default seleccionarCelda\n","import { connect } from 'react-redux';\nimport Celda from './Celda';\nimport seleccionarCelda from '../../actions/seleccionarCelda';\n\nconst mapStateToProps = (state, ownProps) => ({\n  celda: ownProps.celda,\n  seleccionada: ownProps.celda.seleccionada,\n  maquina: ownProps.celda.maquina\n});\n\nconst mapActionsToProps = (dispatch, ownProps) => ({\n  seleccionar: () => dispatch(seleccionarCelda(ownProps.celda))\n});\n\nexport default connect(mapStateToProps, mapActionsToProps)(Celda)","import React from 'react';\nimport '../../styles/Fabrica.scss';\nimport CeldaContainer from \"../Celda/CeldaContainer\";\n\nconst anchoCelda = 55;\nconst altoCelda  = 55;\n\nconst gridFromProps = (props) => ({\n  gridTemplateColumns: `repeat(${props.ancho}, ${anchoCelda}px)`,\n  gridTemplateRows: `repeat(${props.alto}, ${altoCelda}px)`,\n  width: `${props.ancho * anchoCelda}px`,\n  height: `${props.alto * altoCelda}px`\n});\n\nexport const Fabrica = (props) => {\n  return (\n    <div className=\"fabrica-contenedor\" style={ gridFromProps(props) }>\n      { props.celdas.map((celda, index) => <CeldaContainer key={index} celda={celda}/>)}\n    </div>\n  )\n};\n","export const TICK = 'TICK'\n\nconst tick = () => {\n  return {\n    type: TICK\n  }\n}\n\nexport default tick\n","import { connect } from 'react-redux';\nimport { Fabrica } from \"./Fabrica\";\nimport tick from \"../../actions/tick\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  alto: state.fabrica.alto,\n  ancho: state.fabrica.ancho,\n  celdas: state.fabrica.celdas\n});\n\nconst doTick = dispatch => {\n  setInterval(() => {\n    dispatch(tick())\n  }, 1000);\n}\n\nconst mapActionsToProps = (dispatch, ownProps) => ({  \n  tick: doTick(dispatch)\n});\n\nexport default connect(mapStateToProps, mapActionsToProps)(Fabrica)","import React, { Component } from 'react'\nimport '../styles/App.scss'\nimport { Toolbox } from './Toolbox.js'\nimport DetalleContainer from './Detalle/DetalleContainer'\nimport { MAQUINAS, ACCIONES } from '../constantes'\nimport FabricaContainer from './Fabrica/FabricaContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app-contenedor\">\n      \t<Toolbox maquinas={MAQUINAS} acciones={ACCIONES}/>\n        <FabricaContainer id=\"fabrica\"/>\n        <DetalleContainer id=\"detalle\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { SELECCIONAR_ACCION } from '../actions/seleccionarAccion';\n\nconst accionNula = {\n  nombre: ''\n}\n\nconst estadoInicial = {\n  accionSeleccionada: accionNula,\n}\n\nfunction reducer(estado = estadoInicial, { type, payload }) {\n  switch (type) {\n    case SELECCIONAR_ACCION: {\n      return estado.accionSeleccionada.nombre === payload.nombre ?\n        { ...estado, accionSeleccionada: accionNula } :\n        { ...estado, accionSeleccionada: payload }\n    }\n\n    default:\n      return estado\n  }\n}\n\nexport default reducer;\n","export const seleccionar = (celda) => {\n  return celda.seleccionada ? celda : {...celda, seleccionada: true } \n}\n\nexport const deseleccionar = (celda) => {\n  return !celda.seleccionada ? celda : {...celda, seleccionada: false }\n}\n\nexport const esIgualA = (unaCelda, otraCelda) => {\n  return unaCelda.x === otraCelda.x && unaCelda.y === otraCelda.y\n}\n\nexport const asignarMaquina = (celda, maquina) => {\n  return {...celda, maquina: maquina}\n}\n\nexport const ordenarPorCoordenadas = (unaCelda, otraCelda) => {\n  return unaCelda.x === otraCelda.x ? \n    unaCelda.y - otraCelda.y : \n    unaCelda.x - otraCelda.x\n}\n\nexport const ejecutarAccion = (celda, accionAEjecutar) => {\n  return {...celda, maquina: accionAEjecutar.accion.ejecutar(celda.maquina)}\n}\n\nexport const contieneMaquina = (celda) => {\n  return celda.maquina !== null \n}\n\nexport const armarId = (celda) => {\n  return `${celda.x}-${celda.y}`\n}\n\nexport const Celda = (x, y, maquina = null) => {\n  return {\n    seleccionada: false,\n    maquina,\n    materia: 0,\n    x,\n    y\n  }\n} \n","import { AGREGAR_MAQUINA, SELECCIONAR_CELDA, EJECUTAR_ACCION, MOVER_MAQUINA_DE_CELDA, SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER } from '../actions/seleccionarCelda'\nimport {\n  seleccionar,\n  deseleccionar,\n  esIgualA,\n  asignarMaquina,\n  ejecutarAccion,\n  contieneMaquina,\n  armarId\n} from '../models/Celda'\nimport { MAQUINAS, STARTER } from '../constantes'\nimport { TICK } from '../actions/tick';\nimport generarCeldas from './generadorDeCeldas'\nimport {ESTE, NORTE, OESTE, SUR} from \"../models/Maquina\";\n\nconst ancho = 10\nconst alto = 10\n\nconst estadoInicial = {\n  ancho,\n  alto,\n  celdas: generarCeldas(ancho, alto),\n  moverDesdeCelda: null\n}\n\nconst celdaEnCoordenada = (celdas, coordenadaX, coordenadaY) => {\n  return celdas.find(celda => celda.x === coordenadaX && celda.y === coordenadaY)\n}\n\nconst celdaHaciaDondeApunta = (celdas, unaCelda) => {\n  switch (unaCelda.maquina.direccion) {\n    case NORTE: { return celdaEnCoordenada(celdas, unaCelda.x + 1, unaCelda.y) }\n    case SUR:   { return celdaEnCoordenada(celdas, unaCelda.x - 1, unaCelda.y) }\n    case ESTE:  { return celdaEnCoordenada(celdas, unaCelda.x, unaCelda.y - 1) }\n    case OESTE: { return celdaEnCoordenada(celdas, unaCelda.x, unaCelda.y + 1) }\n    default: return null\n  }\n}\n\nfunction reducer(estado = estadoInicial, { type, payload }) {\n  switch (type) {\n    case TICK: {\n      const celdasAfectadas = estado.celdas.filter(celda => celda.maquina).reduce((celdasAfectadas, celda) => {\n        const celdaAfectada = celdaHaciaDondeApunta(estado.celdas, celda)\n\n        if(celdaAfectada) {\n          if (celda.maquina.nombre === STARTER) {\n            const materiaAnterior = celdasAfectadas[armarId(celdaAfectada)] ? celdasAfectadas[armarId(celdaAfectada)].materia : celdaAfectada.materia\n            celdasAfectadas[armarId(celdaAfectada)] = {...celdaAfectada, materia: materiaAnterior + celda.maquina.tick(celdaAfectada)}\n          }\n        }\n\n        return celdasAfectadas\n      }, {})\n\n      if (Object.keys(celdasAfectadas).length === 0) {\n        return estado\n      }\n\n      const nuevasCeldas = estado.celdas.map(celda => {\n        return celdasAfectadas[armarId(celda)] ? celdasAfectadas[armarId(celda)] : celda;\n      })\n\n      return { ...estado, celdas: nuevasCeldas }\n    }\n    \n    case SELECCIONAR_CELDA: {\n      const nuevasCeldas = [...estado.celdas].map(celda => esIgualA(celda, payload) ? seleccionar(celda) : deseleccionar(celda))\n      return { ...estado, celdas: nuevasCeldas }\n    \n    }\n    \n    case AGREGAR_MAQUINA: {\n      const maquinaAAgregar = MAQUINAS.find(({ nombre }) => nombre === payload.maquinaAAgregar)\n      const nuevasCeldas = [...estado.celdas].map( celda => esIgualA(celda, payload.celda) ? asignarMaquina(celda, maquinaAAgregar) : celda)\n      return { ...estado, celdas: nuevasCeldas }\n    }\n    \n    case EJECUTAR_ACCION: {\n      if (contieneMaquina(payload.celda)) {\n        const nuevasCeldas = [...estado.celdas].map( celda => esIgualA(celda, payload.celda) ? ejecutarAccion(celda, payload.accionAEjecutar) : celda)\n        return { ...estado, celdas: nuevasCeldas }\n      }\n      return estado\n    }\n\n    case SELECCIONAR_CELDA_DE_MAQUINA_A_MOVER: {\n      return {...estado, moverDesdeCelda: payload.celda}\n    }\n    case MOVER_MAQUINA_DE_CELDA: {\n      const nuevasCeldas = [...estado.celdas].map( celda => {\n        // Agregar a celda final\n        if (esIgualA(celda, payload.celda)) {\n          return {...celda, maquina: estado.moverDesdeCelda.maquina} \n        }\n        // Reemplazar contenido de celda inicial por celda final\n        if (esIgualA(celda, estado.moverDesdeCelda)) {\n          return {...celda, maquina: payload.celda.maquina}\n        }\n        return celda\n      })\n      return { ...estado, celdas: nuevasCeldas, moverDesdeCelda: null}\n    }\n\n    default:\n      return estado\n  }\n}\n\nexport default reducer\n","import { Celda, ordenarPorCoordenadas } from \"../models/Celda\";\n\nconst generarCeldas = (ancho, alto) => {\n  const celdas = Array.from(Array(ancho * alto)).map((_, index) => {\n    const posicionX = index % ancho;\n    const posicionY = (index - posicionX) / alto;\n\n    return Celda(posicionX, posicionY)\n  });\n\n  return celdas.sort(ordenarPorCoordenadas);\n}\n\nexport default generarCeldas","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport acciones from './reducers/acciones';\nimport fabrica from \"./reducers/fabrica\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst reducer = combineReducers({\n  fabrica,\n  acciones\n});\n\nconst store = createStore(\n  reducer, composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Provider from \"react-redux/es/components/Provider\";\nimport './index.css';\nimport App from './components/App.js';\nimport store from \"./store\";\n\nconst Root = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}