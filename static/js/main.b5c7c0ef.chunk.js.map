{"version":3,"sources":["serviceWorker.js","actions/seleccionarAccion.js","components/Accion/Accion.js","components/Accion/AccionContainer.js","components/Toolbox.js","models/Accion.js","models/Maquina.js","constantes.js","components/Detalle/DetalleContainer.js","components/Detalle/Detalle.js","components/Celda/Celda.js","actions/seleccionarCelda.js","components/Celda/CeldaContainer.js","components/Fabrica/Fabrica.js","components/Fabrica/FabricaContainer.js","components/App.js","reducers/acciones.js","models/Celda.js","reducers/fabrica.js","reducers/generadorDeCeldas.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","SELECCIONAR_ACCION","seleccionarAccion","accionSeleccionada","type","payload","Accion","_ref","seleccionarImagen","imagen","nombre","react_default","a","createElement","onClick","src","alt","className","obtenerImagen","state","ownProps","acciones","imagenActiva","imagenInactiva","connect","dispatch","Toolbox","maquinas","agregarAcciones","map","accion","index","AccionContainer","key","concat","imagenActivaUrl","imagenInactivaUrl","agregarMaquinas","maquina","slice","Object","classCallCheck","this","imagenUrl","activa","createClass","value","estaActiva","Maquina","_Accion","costo","frecuencia","_this","possibleConstructorReturn","getPrototypeOf","call","inherits","ACCIONES","process","MAQUINAS","obtenerMaquina","find","clases","seleccionada","Celda","seleccionar","height","width","SELECCIONAR_CELDA","AGREGAR_MAQUINA","seleccionarCelda","celdaSeleccionada","getState","includes","celda","maquinaAAgregar","gridFromProps","props","gridTemplateColumns","ancho","gridTemplateRows","alto","celdas","fabrica","style","CeldaContainer","App","Toolbox_Toolbox","FabricaContainer","id","DetalleContainer","Component","estadoInicial","reducer","estado","arguments","length","undefined","objectSpread","deseleccionar","esIgualA","unaCelda","otraCelda","x","y","asignarMaquina","ordenarPorCoordenadas","Array","from","_","posicionX","sort","generarCeldas","nuevasCeldas","toConsumableArray","_ref2","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Root","Provider","components_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5c7c0ef.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Action creator\nexport const SELECCIONAR_ACCION = 'SELECCIONAR_ACCION'\n\nconst seleccionarAccion = accionSeleccionada => {\n  return {\n    type: SELECCIONAR_ACCION,\n    payload: accionSeleccionada\n  }\n}\n\nexport default seleccionarAccion\n","import React from 'react';\nimport '../../styles/Toolbox.scss';\nimport '../../styles/_compartido.scss';\n\nconst Accion = ({seleccionarImagen, imagen, nombre}) => {\n  return (\n    <div onClick={seleccionarImagen}>\n      <img src={imagen} alt={nombre} className=\"accion\"/>\n    </div>\n  )\n}\n\nexport default Accion\n","import seleccionarAccion from '../../actions/seleccionarAccion';\nimport { connect } from 'react-redux';\nimport Accion from './Accion';\n\nfunction obtenerImagen(state, ownProps) {\n  return state.acciones.accionSeleccionada === ownProps.nombre ?\n    ownProps.imagenActiva :\n    ownProps.imagenInactiva;\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  imagen: obtenerImagen(state, ownProps)\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  seleccionarImagen: () => dispatch(seleccionarAccion(ownProps.nombre))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Accion)\n","import React from 'react';\nimport '../styles/Toolbox.scss';\nimport '../styles/_compartido.scss';\nimport AccionContainer from './Accion/AccionContainer';\n\nexport const Toolbox = ({maquinas, acciones}) => {\n  const agregarAcciones = () => {\n    return acciones.map((accion, index) =>\n      <AccionContainer key={`accion-${index}`} nombre={accion.nombre} imagenActiva={accion.imagenActivaUrl} imagenInactiva={accion.imagenInactivaUrl}/>\n    )\n  }\n\n  const agregarMaquinas = () => {\n    return maquinas.map((maquina, index) =>\n      <AccionContainer key={`maquina-${index}`} nombre={maquina.nombre} imagenActiva={maquina.imagenActivaUrl} imagenInactiva={maquina.imagenInactivaUrl}/>\n    )\n  }\n\n  return (\n    <div className=\"toolbox-contenedor\">\n\n      <div className=\"acciones-contenedor\">\n      \t<div className=\"titulo\">Máquinas</div>\n  \t    <div className=\"toolbox-acciones borde-piola\">\n\n          <div className=\"row\">\n            { agregarMaquinas().slice(0,2) }\n          </div>\n          <div className=\"row\">\n            { agregarMaquinas().slice(2,4) }\n          </div>\n          <div className=\"row\">\n            { agregarMaquinas().slice(4,6) }\n          </div>\n        </div>\n\t    </div>\n\n      <div className=\"acciones-contenedor\">\n        <div className=\"titulo\">Edición</div>\n  \t    <div className=\"toolbox-acciones borde-piola\">\n          <div className=\"row\">\n            { agregarAcciones().slice(0, 2) }\n          </div>\n          <div className=\"row\">\n            { agregarAcciones().slice(2, 4) }\n          </div>\n        </div>\n    \t</div>\n\n    </div>\n  )\n}\n","export class Accion {\n\n  constructor(nombre, imagenInactivaUrl, imagenActivaUrl) {\n    this.nombre = nombre\n    this.imagenUrl = imagenInactivaUrl\n\n    // privadas\n    this.imagenInactivaUrl = imagenInactivaUrl\n    this.imagenActivaUrl = imagenActivaUrl\n    this.activa = false\n  }\n\n  estaActiva() {\n    return this.activa;\n  }\n\n  activarDesactivar() {\n    this.activa = !this.activa\n    if (this.estaActiva()) {\n      this.imagenUrl = this.imagenActivaUrl\n    } else {\n      this.imagenUrl = this.imagenInactivaUrl\n    }\n  }\n}\n","import {Accion} from \"./Accion\";\n\nexport class Maquina extends Accion {\n\n  constructor(nombre, costo, frecuencia, imagenInactivaUrl, imagenActivaUrl) {\n    super(nombre, imagenInactivaUrl, imagenActivaUrl);\n    this.costo = costo\n    this.frecuencia = frecuencia\n  }\n}\n","import {Maquina} from \"./models/Maquina\";\nimport {Accion} from \"./models/Accion\";\n\nlet rotarUrl =  process.env.PUBLIC_URL + '/icons/rotar.svg'\nlet rotarActivoUrl =  process.env.PUBLIC_URL + '/icons/rotar_activo.svg'\n\nlet eliminarUrl =  process.env.PUBLIC_URL + '/icons/eliminar.svg'\nlet eliminarActivoUrl =  process.env.PUBLIC_URL + '/icons/eliminar_activo.svg'\n\nlet moverUrl =  process.env.PUBLIC_URL + '/icons/mover.svg'\nlet moverActivoUrl =  process.env.PUBLIC_URL + '/icons/mover_activo.svg'\n\nexport const ACCIONES = [\n  new Accion('Rotar', rotarUrl, rotarActivoUrl),\n  new Accion('Eliminar', eliminarUrl, eliminarActivoUrl),\n  new Accion('Mover', moverUrl, moverActivoUrl),\n]\n\nlet starterUrl =  process.env.PUBLIC_URL + '/icons/starter.svg'\nlet starterActivoUrl =  process.env.PUBLIC_URL + '/icons/starter_activo.svg'\n\nlet sellerUrl =  process.env.PUBLIC_URL + '/icons/seller.svg'\nlet sellerActivoUrl =  process.env.PUBLIC_URL + '/icons/seller_activo.svg'\n\nlet crafterUrl =  process.env.PUBLIC_URL + '/icons/crafter.svg'\nlet crafterActivoUrl =  process.env.PUBLIC_URL + '/icons/crafter_activo.svg'\n\nlet furnaceUrl =  process.env.PUBLIC_URL + '/icons/furnace.svg'\nlet furnaceActivoUrl =  process.env.PUBLIC_URL + '/icons/furnace_activo.svg'\n\nlet transporterUrl =  process.env.PUBLIC_URL + '/icons/transporter.svg'\nlet transporterActivoUrl =  process.env.PUBLIC_URL + '/icons/transporter_activo.svg'\n\nexport const MAQUINAS = [\n  new Maquina('Starter', '10', '1', starterUrl, starterActivoUrl),\n  new Maquina('Seller', '15', '1', sellerUrl, sellerActivoUrl),\n  new Maquina('Crafter', '20', '1', crafterUrl, crafterActivoUrl),\n  new Maquina('Furnace', '25', '1', furnaceUrl, furnaceActivoUrl),\n  new Maquina('Transporter', '30', '1', transporterUrl, transporterActivoUrl),\n]\n","import { connect } from 'react-redux';\nimport { Detalle } from './Detalle';\nimport { MAQUINAS } from '../../constantes';\n\nfunction obtenerMaquina(state) {\n  return MAQUINAS.find(maquina => maquina.nombre === state.acciones.accionSeleccionada);\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  maquina: obtenerMaquina(state)\n})\n\nexport default connect(mapStateToProps)(Detalle)\n","import React from 'react';\nimport '../../styles/Detalle.scss';\nimport '../../styles/_compartido.scss';\n\nexport const Detalle = ({maquina}) => {\n  return (\n    <div className=\"detalle-contenedor\">\n      <div>\n        <div className=\"titulo\">Detalles</div>\n            <div className=\"detalle-contenido borde-redondeado\">\n            {\n              maquina ?\n              <div>\n                <div className=\"nombre-maquina\">{maquina.nombre}</div>\n                <div className=\"costo-maquina\">Costo: <span> ${maquina.costo} </span></div>\n                <div className=\"frecuencia-maquina\">Frecuencia: <span> {maquina.frecuencia}/s </span></div>\n              </div> :\n              ''\n            }\n            </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport '../../styles/Celda.scss';\n\nconst clases = (seleccionada) => {\n  const claseSeleccionada = seleccionada ? 'seleccionada' : '';\n  return `celda ${claseSeleccionada}`\n};\n\nconst Celda = ({seleccionada, seleccionar, maquina}) => {\n  return (\n    <div className={ clases(seleccionada) } onClick={seleccionar}>\n      { !!maquina ? <img src={maquina.imagenInactivaUrl} alt={maquina.nombre} height=\"100%\" width=\"100%\"/> : '' }\n    </div>\n  )\n};\n\nexport default Celda","import {MAQUINAS} from \"../constantes\";\n\nexport const SELECCIONAR_CELDA = 'SELECCIONAR_CELDA';\nexport const AGREGAR_MAQUINA = 'AGREGAR_MAQUINA';\n\nconst seleccionarCelda = celdaSeleccionada => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SELECCIONAR_CELDA,\n      payload: celdaSeleccionada\n    });\n\n    const accionSeleccionada = getState().acciones.accionSeleccionada;\n\n    if(MAQUINAS.map(({ nombre }) => nombre).includes(accionSeleccionada)) {\n      dispatch({\n        type: AGREGAR_MAQUINA,\n        payload: { celda: celdaSeleccionada, maquinaAAgregar: accionSeleccionada }\n      });\n    }\n  };\n};\n\nexport default seleccionarCelda\n","import { connect } from 'react-redux';\nimport Celda from \"./Celda\";\nimport seleccionarCelda from \"../../actions/seleccionarCelda\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  seleccionada: ownProps.celda.seleccionada,\n  maquina: ownProps.celda.maquina\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  seleccionar: () => dispatch(seleccionarCelda(ownProps.celda))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Celda)","import React from 'react';\nimport '../../styles/Fabrica.scss';\nimport CeldaContainer from \"../Celda/CeldaContainer\";\n\nconst anchoCelda = 55;\nconst altoCelda  = 55;\n\nconst gridFromProps = (props) => ({\n  gridTemplateColumns: `repeat(${props.ancho}, ${anchoCelda}px)`,\n  gridTemplateRows: `repeat(${props.alto}, ${altoCelda}px)`,\n  width: `${props.ancho * anchoCelda}px`,\n  height: `${props.alto * altoCelda}px`\n});\n\nexport const Fabrica = (props) => {\n  return (\n    <div className=\"fabrica-contenedor\" style={ gridFromProps(props) }>\n      { props.celdas.map((celda, index) => <CeldaContainer key={index} celda={celda}/>)}\n    </div>\n  )\n};\n","import { connect } from 'react-redux';\nimport { Fabrica } from \"./Fabrica\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  alto: 10,\n  ancho: 10,\n  celdas: state.fabrica.celdas\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fabrica)","import React, { Component } from 'react';\nimport '../styles/App.scss';\nimport { Toolbox } from './Toolbox.js'\nimport DetalleContainer from './Detalle/DetalleContainer';\nimport { ACCIONES, MAQUINAS } from \"../constantes\";\nimport FabricaContainer from \"./Fabrica/FabricaContainer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app-contenedor\">\n      \t<Toolbox maquinas={MAQUINAS} acciones={ACCIONES}/>\n        <FabricaContainer id=\"fabrica\"/>\n        <DetalleContainer id=\"detalle\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { SELECCIONAR_ACCION } from '../actions/seleccionarAccion';\n\nconst estadoInicial = {\n  accionSeleccionada: '',\n};\n\nfunction reducer(estado = estadoInicial, { type, payload }) {\n  switch (type) {\n    case SELECCIONAR_ACCION: {\n      return estado.accionSeleccionada === payload ?\n        { ...estado, accionSeleccionada: '' } :\n        { ...estado, accionSeleccionada: payload }\n    }\n\n    default:\n      return estado\n  }\n}\n\nexport default reducer;\n","export const seleccionar = (celda) => {\n  return {...celda, seleccionada: true } \n}\n\nexport const deseleccionar = (celda) => {\n  return {...celda, seleccionada: false }\n}\n\nexport const esIgualA = (unaCelda, otraCelda) => {\n  return unaCelda.x === otraCelda.x && unaCelda.y === otraCelda.y\n}\n\nexport const asignarMaquina = (celda, maquina) => {\n  return {...celda, maquina: maquina}\n}\n\nexport const ordenarPorCoordenadas = (unaCelda, otraCelda) => {\n  return unaCelda.x === otraCelda.x ? \n    unaCelda.y - otraCelda.y : \n    unaCelda.x - otraCelda.x\n}\n\nexport const Celda = (x, y) => {\n  return {\n    seleccionada: false,\n    maquina: {},\n    x,\n    y\n  }\n} \n","import {AGREGAR_MAQUINA, SELECCIONAR_CELDA} from '../actions/seleccionarCelda';\nimport {MAQUINAS} from \"../constantes\";\nimport generarCeldas from './generadorDeCeldas'\nimport { seleccionar, deseleccionar, esIgualA, asignarMaquina } from '../models/Celda'\n\nconst estadoInicial = {\n  celdas: generarCeldas(10, 10),\n};\n\nfunction reducer(estado = estadoInicial, { type, payload }) {\n  switch (type) {\n    case SELECCIONAR_CELDA: {\n      const nuevasCeldas = [...estado.celdas].map(celda => {\n        if(esIgualA(celda, payload)) {\n          return seleccionar(celda)\n        } else {\n          return deseleccionar(celda)\n        } \n      })\n      return { ...estado, celdas: nuevasCeldas };\n    }\n    case AGREGAR_MAQUINA: {\n      const maquinaAAgregar = MAQUINAS.find(({ nombre }) => nombre === payload.maquinaAAgregar)\n      const nuevasCeldas = [...estado.celdas].map( celda => {\n        if(esIgualA(celda, payload.celda)) {\n          return asignarMaquina(celda, maquinaAAgregar)\n        }\n        return celda\n      })\n      return { ...estado, celdas: nuevasCeldas };\n    }\n    default:\n      return estado;\n  }\n}\n\nexport default reducer;\n","import { Celda, ordenarPorCoordenadas } from \"../models/Celda\";\n\nconst generarCeldas = (ancho, alto) => {\n  const celdas = Array.from(Array(ancho * alto)).map((_, index) => {\n    const posicionX = index % ancho;\n    const posicionY = (index - posicionX) / alto;\n\n    return Celda(posicionX, posicionY)\n  });\n\n  return celdas.sort(ordenarPorCoordenadas);\n}\n\nexport default generarCeldas","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport acciones from './reducers/acciones';\nimport fabrica from \"./reducers/fabrica\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst reducer = combineReducers({\n  fabrica,\n  acciones\n});\n\nconst store = createStore(\n  reducer, composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Provider from \"react-redux/es/components/Provider\";\nimport './index.css';\nimport App from './components/App.js';\nimport store from \"./store\";\n\nconst Root = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}